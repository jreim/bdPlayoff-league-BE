{"version":3,"sources":["admin/Roster.tsx","services/urlService.ts","admin/PlayersPage.tsx","admin/TeamPage.tsx","admin/DraftLine.tsx","admin/DraftPage.tsx","admin/Score/ScoresPage.tsx","admin/games/PlayerStatEntry.tsx","admin/games/PlayerScoreRow.tsx","admin/games/GameView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Roster","a","map","value","players","player","position","props","push","this","setState","data","p","undefined","team2","team1","className","index","getClazz","name","React","getUrl","window","PlayerPage","pro","state","nflTeams","getPlayers","bind","console","log","fetch","then","response","json","isLoading","_","filter","conf","key","nflTeam","TeamPage","teamName","teamEmail","teams","handleChange","handleSubmit","randomDraft","deleteTeam","getNeeds","sortBy","loadTeams","e","preventDefault","method","body","JSON","stringify","headers","res","catch","err","alert","event","target","id","team","jawn","indexOf","splice","Table","size","indx","draftPos","email","onClick","Form","onSubmit","Row","Col","Control","type","onChange","Button","variant","startDraft","DraftLine","pickParam","scope","pick","roundPick","playerName","editPick","DraftPage","picks","pickNumber","logo","eliminated","wcw","score","passYd","recYd","rushYd","tPt","rushTd","passRecTd","xp","fg","dst","elim","playoffRound","editTeam","orderBy","getPickNumber","length","found","i","playerId","status","selected","teamId","toString","labelKey","option","filterBy","options","placeholder","ScoresPage","Container","Accordion","Card","lg","Toggle","as","Header","eventKey","Collapse","PlayerStatEntry","params","round","isUndefined","div","stat","rushTdStr","passRecTdStr","fgStr","forceUpdate","hit","localStat","rtd","strToArray","ptd","fgt","strArr","split","intArr","parseInt","Component","PlayerScoreRow","filterd","Body","striped","bordered","hover","GameView","games","game","order","homeTeam","awayTeam","App","href","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1fdb49e0.chunk.js","sourcesContent":["import * as React from \"react\";\nimport {Players} from \"../public/Players\";\nimport {Player} from \"../services/RosterService\";\nimport \"./Roster.css\"\ninterface RosterProps {\n  players: Array<Player>;\n}\nexport class Roster extends React.Component<RosterProps> {\n\n  // readonly state: {x:Player[]};\n\n  constructor(a:RosterProps) {\n    super(a);\n    // this.state = {x:Array<Player>()};\n    [\"QB\",\"RB\",\"WR\",\"TE\",\"K\",\"DST\"].map((value:string)=>{\n      a.players.map((player:Player)=>{\n        if(player.position === value){\n          this.props.players.push(player)\n        }\n      })\n    })\n\n  }\n\n  componentDidMount(): void {\n    this.setState({data:[]})\n  }\n\n  getClazz(p:Player ):string {\n    if(p.team2 != undefined){\n      return \"row text-left text-muted\"\n    }\n    else if(p.team1 != undefined){\n      return \"row text-left text-warning\"\n    }\n    return \"row text-left text-primary\";\n  }\n\n  render(){\n    return (\n      <div className=\"\">\n      {this.props.players.map((value:Player,index:number) => {\n          return (\n            <div className={this.getClazz(value)}>\n              <div className=\"col-2\">{value.position}</div>\n              <div className=\"col-8\">\n                {value.name}\n              </div>\n            </div>\n          )})}\n\n      </div>);\n  }\n}","\nexport var getUrl = function():string {\n  // return 'http://localhost:8080';\n  return window.name;\n};","import * as React from \"react\";\nimport './PlayerPage.css'\nimport {NflTeam} from \"../services/NflTeamService\";\nimport {Roster} from \"./Roster\";\nimport _ from \"lodash\";\nimport {Player} from \"../services/RosterService\";\nimport {Team} from \"../services/TeamService\";\nimport {getUrl} from \"../services/urlService\";\n// import Timeout = NodeJS.Timeout;\n\nexport interface PlayerPageProps {\n  nflTeams: Array<NflTeam>;\n  players: Array<Player>;\n}\nexport class PlayerPage extends React.Component<PlayerPageProps> {\n\n  state:PlayerPageProps;\n  // timer:Timeout;\n  constructor(pro:PlayerPageProps) {\n    super(pro);\n    this.state = {nflTeams:[],players:[]};\n    this.getPlayers = this.getPlayers.bind(this)\n    // setInterval(()=> this.getPlayers(), 1000);\n  }\n  getPlayers(){\n    console.log(\"run\")\n    fetch(getUrl() +\"/player\")\n    .then(response => response.json())\n    .then(data =>{\n      console.log(\"got players\")\n      this.setState({ players: data, isLoading: true, nflTeams: this.state.nflTeams })\n      return fetch(getUrl() +\"/static/nflTeams\")\n      .then(response => response.json())\n      .then(data =>{\n        console.log(\"got time\")\n        this.setState({nflTeams: data, isLoading: false, players: this.state.players});\n      });\n    } );\n    // .then(data =>{\n    //   console.log(data)\n    //   this.setState({...this.state,players:data, nflTeams:this.state.nflTeams});\n    //   this.forceUpdate();\n    // } )\n  }\n\n  componentDidMount() {\n    this.setState({nflTeams: [], isLoading: true,players: []});\n    // this.state: IPlayerState{isLoading: true}\n    fetch(getUrl() +\"/player\")\n    .then(response => response.json())\n    .then(data =>{\n        this.setState({ players: data, isLoading: true, nflTeams: this.state.nflTeams })\n        return fetch(getUrl() +\"/static/nflTeams\")\n        .then(response => response.json())\n        .then(data => this.setState({nflTeams: data, isLoading: false, players: this.state.players}));\n    } )\n\n  }\n\n\n  render() {\n    return (\n      <div className=\"container\">\n\n\n\n\n\n\n\n        <div className=\"row\">\n          {_.filter(this.state.nflTeams,\n            (data:NflTeam)=> {return data.conf === 'AFC'}).map(\n              (value:NflTeam, index:number) => {\n            return(\n              <div className=\"col\">\n                   <div className=\"row \">\n                     {/*<img src={logo}/>*/}\n                     {/*<img src=\"%PUBLIC_URL%/NE.png\"/>*/}\n                     {/*<img src={process.env.PUBLIC_URL + value.logo}/>*/}\n                     <h3 className=\"col-12\">{value.name}</h3>\n                   </div>\n              <div className=\"row\">\n                <Roster key={value.name} players={_.filter(this.state.players, (data: Readonly<Player>) =>{\n                  return data.nflTeam.name === value.name;\n                }) }/>\n              </div>\n              </div>)})}\n        </div>\n\n        <div className=\"row\">\n          {_.filter(this.state.nflTeams,(data:NflTeam)=> {return data.conf === 'NFC'}).map((value:NflTeam, index:number) => {\n            return(\n              <div className=\"col\">\n                <div className=\"row justify-content-center\">\n                  {/*<img src={logo}/>*/}\n                  {/*<img src=\"%PUBLIC_URL%/NE.png\"/>*/}\n                  {/*<img src={process.env.PUBLIC_URL + value.logo}/>*/}\n                  <h3>{value.name}</h3>\n                </div>\n                <div className=\"\">\n                  <Roster key={value.name} players={_.filter(this.state.players, (data: Readonly<Player>) =>{\n                    return data.nflTeam.name === value.name;\n                  }) }/>\n                </div>\n              </div>)})}\n        </div>\n      </div>\n    );\n\n  }\n}\n","import * as React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport './Team.css'\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport {Team} from \"../services/TeamService\";\nimport _ from \"lodash\";\nimport {FaTrashAlt} from 'react-icons/fa';\nimport { TeamService} from \"../services/TeamService\";\nimport {getUrl} from \"../services/urlService\";\n\nexport interface TeamPageProps {\n  teamName: string;\n  teamEmail: string;\n  teams: Array<Team>;\n}\nexport class TeamPage extends React.Component<TeamPageProps> {\n\n  state:TeamPageProps;\n\n  constructor(state:TeamPageProps) {\n    super(state);\n    this.state = {teamName: \"\", teamEmail:\"\", teams:[]}\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.randomDraft = this.randomDraft.bind(this);\n    this.deleteTeam = this.deleteTeam.bind(this);\n    this.getNeeds = this.getNeeds.bind(this);\n  }\n\n  loadTeams(){\n    fetch(getUrl() +\"/team\")\n    .then(response => response.json())\n    .then(data => {\n      this.setState({...this.state, teams: _.sortBy(data, 'draftPos')})\n    })\n  }\n  componentDidMount(): void {\n    this.loadTeams();\n  }\n\n  handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    console.log(this.state);\n    e.preventDefault();\n    fetch(getUrl()  +'/team', {\n      method: 'POST',\n      body: JSON.stringify({\"name\": this.state.teamName, \"email\": this.state.teamEmail}),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response => response.json())\n    .then(res => {\n      this.state.teams.push(res);\n      this.setState({...this.state, teams: _.sortBy(this.state.teams, 'draftPos'),\n          teamName: \"\", teamEmail:\"\"})\n    }).catch(err => {\n      alert(err);\n    });\n  }\n\n  handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    if (event.target.id === 'name') {\n      this.setState({...this.state, teamName: event.target.value});\n    }\n    if (event.target.id === 'email') {\n      this.setState({...this.state, teamEmail: event.target.value});\n    }\n\n  }\n\n  randomDraft() {\n\n    fetch(getUrl() +\"/team/shuffle\")\n    .then(response => response.json())\n    .then(data => {\n      this.setState({...this.state, teams: _.sortBy(data, 'draftPos')})\n    })\n  };\n\n  deleteTeam(id:number){\n    fetch(getUrl() +\"/team/\"+id,{\n      method: \"DELETE\"})\n    .then(data => {\n      this.setState({...this.state, teams: _.sortBy(data, 'draftPos')})\n    })\n  }\n\n  startDraft(){\n    fetch(getUrl() +\"/draft/start\",{\n      method: \"GET\"})\n    .then(data => {\n      alert(\"Draft is started , no mo teams can be added.\")\n    })\n  }\n\n  getNeeds(team: Team):string{\n    var players:Array<string>;\n    players = [\"QB\",\"RB\",\"RB\",\"WR/TE\",\"WR/TE\",\"WR/TE\",\"K\",\"DST\"];\n    console.log(team.players)\n    if(team.players){\n      for(var p of team.players) {\n        var jawn:string = p.position;\n        if(jawn === \"TE\" || jawn ==\"WR\"){\n          jawn=\"WR/TE\";\n        }\n        if (players.indexOf(jawn) > -1) {\n          players.splice(players.indexOf(jawn), 1);\n        }\n      }\n    }\n    return JSON.stringify(players);\n  }\n\n  render() {\n    return (\n      <div className={\"row\"}>\n        <Table size={\"sm\"}>\n          <thead>\n          <tr>\n            <th>Draft Pos</th>\n            <th>Name</th>\n            <th>email</th>\n            <th>remaining</th>\n            <th>util</th>\n          </tr>\n          </thead>\n          <tbody>\n          {this.state.teams.map((value: Team, indx: number) => {\n            return (\n              <tr>\n                <td>{value.draftPos}</td>\n                <td>{value.name}</td>\n                <td>{value.email}</td>\n                <td>{this.getNeeds(value)}</td>\n                <td><FaTrashAlt onClick={()=>{this.deleteTeam(value.id)}}/></td>\n              </tr>\n            );\n          })\n          }\n          </tbody>\n        </Table>\n        <div className={\"row\"}>\n\n        </div>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Row>\n            <Col>\n              <Form.Control id=\"name\" type=\"text\" value={this.state.teamName} onChange={this.handleChange}/>\n            </Col>\n            <Col>\n              <Form.Control id=\"email\" type=\"text\" value={this.state.teamEmail} onChange={this.handleChange}/>\n\n            </Col>\n            <Col>\n              <Button variant=\"primary\" type=\"submit\">\n                Add Team\n              </Button>\n            </Col>\n\n            <Col>\n              <Button variant=\"primary\" onClick={this.randomDraft}>\n                shuffle draft\n              </Button>\n\n            </Col>\n\n            <Col>\n              <Button variant=\"primary\" onClick={this.startDraft}>\n                Start draft\n              </Button>\n\n            </Col>\n          </Form.Row>\n\n        </Form>\n      </div>\n\n    )\n  }\n}","import * as React from \"react\";\nimport {DraftPick} from \"../services/DraftService\";\nimport {FaTrashAlt, FaPencilAlt, FaPoop} from 'react-icons/fa';\nimport {Player} from \"../services/RosterService\";\nimport './DraftPage.css'\n\ninterface IState {\n  pick: DraftPick;\n  players: Array<Player>\n  pickNumber: number;\n  editPick: (num:number)=>void;\n  getNeeds: (num:string)=>void;\n\n}\nexport class DraftLine extends React.Component<IState> {\n\n  state:IState;\n  constructor(pickParam: IState) {\n\n    super(pickParam);\n    this.state = pickParam;\n  }\n\n  render() {\n    return (\n      <tr>\n        <th scope=\"row\">{this.state.pick.draftPos}</th>\n        <td>{this.state.pick.roundPick}</td>\n        <td>{this.state.pick.teamName}</td>\n        <td>{this.state.pick.playerName}</td>\n        <td>\n          <FaPencilAlt onClick={()=>{this.state.editPick(this.state.pick.draftPos)}}/>\n        </td>\n      </tr>\n      );\n\n  }\n\n\n\n\n\n}","import * as React from \"react\";\nimport _ from \"lodash\";\nimport {Typeahead} from 'react-bootstrap-typeahead';\nimport {Player} from \"../services/RosterService\";\nimport {Button, Col, Form} from \"react-bootstrap\";\nimport {DraftLine} from \"./DraftLine\";\nimport {DraftPick} from \"../services/DraftService\";\nimport {Team} from \"../services/TeamService\";\nimport './DraftPage.css';\nimport {getUrl} from \"../services/urlService\";\n\ninterface DraftPageProps {\n  players: Array<Player>;\n  teams: Array<Team>;\n  player: Player;\n  picks: Array<DraftPick>;\n  pickNumber: number;\n}\n\nexport class DraftPage extends React.Component<DraftPageProps> {\n\n  state: DraftPageProps;\n\n  constructor(state: DraftPageProps) {\n    super(state);\n    this.state = {\n      players: [],\n      teams: [],\n      picks: [],\n      pickNumber: 1,\n      player: {\n        position: \"\",\n        id: 0,\n        name: \"\",\n        nflTeam: {name: \"\", conf: \"\", logo: \"\"},\n        team1: undefined,\n        team2: undefined,\n        eliminated: false,\n        wcw: {\n          id: 0,\n          score: 0,\n          passYd: 0,\n          recYd: 0,\n          rushYd: 0,\n          tPt: 0,\n\n          rushTd: [],\n          passRecTd: [],\n\n          xp: 0,\n          fg: [],\n          dst: 0,\n          elim: false,\n          playoffRound: \"\"\n        }\n      },\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.editTeam = this.editTeam.bind(this);\n    this.getNeeds = this.getNeeds.bind(this);\n\n  }\n\n  loadTeams() {\n\n    fetch(getUrl() + \"/team\")\n    .then(response => response.json())\n    .then(data => {\n      this.setState({...this.state, teams: _.sortBy(data, 'draftPos')})\n      return fetch(getUrl() + \"/player\")\n      .then(response => response.json())\n      .then(data => {\n        console.log(\" data \" + data)\n        this.setState({...this.state, players: data})\n\n        console.log(\" data 2\")\n        return fetch(getUrl() + \"/draft\")\n        .then(response => response.json())\n        .then(data => {\n          this.setState({\n            ...this.state,\n            picks: _.orderBy(data, ['draftPos']),\n            pickNumber: this.getPickNumber(_.orderBy(data, ['draftPos']))\n          })\n        })\n      })\n    })\n  }\n\n\n  getPickNumber(picks: Array<DraftPick>): number {\n    if (picks.length === 0) {\n      return 1;\n    }\n    var found: boolean = false;\n    var i: number = 0;\n    while (!found) {\n      if (i == picks.length) {\n        found = true;\n        i = 0;\n      }\n      if (picks[i].playerId == 0 || picks[i].playerId == undefined) {\n        found = true;\n      } else {\n        i = i + 1;\n      }\n      // found = true;\n    }\n    // return  _.filter(picks,(p:DraftPick)=>{return p.playerId == 0})[0].draftPos;\n    return i + 1;\n\n  }\n\n  componentDidMount(): void {\n    this.loadTeams();\n  }\n\n\n  handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    fetch( getUrl()+ '/draft/pick/' + this.state.picks[this.state.pickNumber - 1].id\n      + \"?playerId=\" + this.state.player.id, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    }).then(res => {\n\n      if (res.status == 200) {\n        console.log(\"1\");\n        this.state.picks[this.state.pickNumber - 1].playerName = this.state.player.name;\n        console.log(\"2\");\n        this.state.picks[this.state.pickNumber - 1].playerId = this.state.player.id;\n        console.log(\"3\");\n        this.setState({...this.state, pickNumber: this.getPickNumber(this.state.picks), player: undefined});\n        console.log(\"4\");\n        // this.setState({...this.state, player: undefined});\n        // const t:Team =  {...res};\n        // this.setState({...this.state, teams: this.state.teams.push(res.json() )})\n      } else {\n        alert(\"something went wrong try refreshing... \")\n      }\n      console.log(res);\n\n    }).catch(err => {\n      console.log(err)\n    });\n\n\n    e.preventDefault();\n  }\n\n  handleChange(selected: Player[]) {\n    this.setState({...this.state, player: selected[0]})\n  }\n\n  editTeam(draftPos: number) {\n    this.setState({...this.state, pickNumber: draftPos});\n  }\n\n  getNeeds(teamId: string) {\n\n    this.state.teams.map((team: Team) => {\n      if (team.id.toString() == teamId) {\n        var players: Array<string>;\n        players = [\"QB\", \"RB\", \"RB\", \"WR/TE\", \"WR/TE\", \"WR/TE\", \"K\", \"DST\"];\n        if (team.players) {\n\n          for (var p of team.players) {\n            var jawn: string = p.position;\n            if (jawn === \"TE\" || jawn == \"WR\") {\n              jawn = \"WR/TE\";\n            }\n            if (players.indexOf(jawn) > -1) {\n              players.splice(players.indexOf(jawn), 1);\n            }\n          }\n        }\n        alert(players);\n      }\n    })\n\n  }\n\n  render() {\n    return (\n      <div>\n\n\n        <div className={\"row tableFixHead\"}>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Row>\n              {/*<Col>Pick {this.state.pickNumber} for team {this.state.picks[this.state.pickNumber-1]} </Col>*/}\n              <Col>\n                <Typeahead\n                  id={\"playersTypeAhead\"}\n                  labelKey={(option: Player) => option.name + '-' + option.position}\n                  // labelKey={'name'}\n                  filterBy={['name']}\n                  // multiple={multiple}\n                  options={this.state.players}\n                  // labelKey={o => {o.name} }\n                  placeholder=\"Player\"\n                  // selected={this.state.selected}\n                  onChange={this.handleChange}\n                />\n              </Col>\n              {/*<Col>*/}\n              {/*    <Form.Control id=\"email\" type=\"text\" value={this.state.newTeam.email} onChange={this.handleChange}/>*/}\n\n              {/*</Col>*/}\n              <Col>\n                <Button variant=\"primary\" type=\"submit\">\n                  Draft Player\n                </Button>\n              </Col>\n            </Form.Row>\n\n          </Form>\n        </div>\n\n        <table className=\"table col-8\">\n          <thead>\n          <tr>\n            <th scope=\"col\">pick#</th>\n            <th scope=\"col\">round.Pick</th>\n            <th scope=\"col\">Team</th>\n            <th scope=\"col\">Player</th>\n            <th scope=\"col\">Utils</th>\n          </tr>\n          </thead>\n          {          console.log(\"called render\")\n          }\n          <tbody>\n          {\n            // if(this.props.picks === undefined) {\n            //\n            // }\n\n            this.state.picks.map((pickParam: DraftPick, indx: number) => {\n            return (\n              // <div className={this.state.pickNumber === pickParam.draftPos ? \" pick otline \" : \"otline\"}>\n                <DraftLine key={pickParam.id}\n                           pick={pickParam}\n                           players={this.state.players}\n                           pickNumber={this.state.pickNumber}\n                           editPick={this.editTeam}\n                           getNeeds={this.getNeeds}/>\n              // </div>\n          )\n          })}\n\n\n          </tbody>\n        </table>\n\n      </div>\n    );\n  }\n}\n\ninterface PlayerLine {\n\n  players: [],\n  teams: [],\n  picks: [],\n  pickNumber: 1,\n  player: {\n    position: \"\",\n    id: 0,\n    name: \"\",\n    nflTeam: { name: \"\", conf: \"\", logo: \"\" },\n    team1: undefined,\n    team2: undefined,\n    eliminated: false,\n    wcw: {\n      id: 0,\n      score: 0,\n      passYd: 0,\n      recYd: 0,\n      rushYd: 0,\n      tPt: 0,\n\n      rushTd: [],\n      passRecTd: [],\n\n      xp: 0,\n      fg: [],\n      dst: 0,\n      elim: false,\n      playoffRound: \"\"\n    }\n  }\n};","import * as React from \"react\";\nimport './ScoresPage.css'\nimport Col from \"react-bootstrap/Col\";\nimport _ from \"lodash\";\n\nimport {Accordion, Card, Container, Row} from \"react-bootstrap\";\nimport {Team} from \"../../services/TeamService\";\nimport {TeamRoster} from \"./TeamRoster\";\nimport {getUrl} from \"../../services/urlService\";\n\nexport interface ScorePageState {\n  teams: Array<Team>;\n}\nexport class ScoresPage extends React.Component{\n\n  state:ScorePageState;\n\n  constructor() {\n    super({});\n    this.state = {teams:[]};\n    // this.loadTeams();\n  }\n\n  loadTeams(){\n    fetch(getUrl() +\"/team/scoreView\")\n    // fetch(\"http://20200103t024800-dot-bdsplayoffleague.appspot.com/team/scoreView\")\n    .then(response => response.json())\n    .then(data => {\n      this.setState({...this.state, teams: _.orderBy(data, 'id','desc')})\n    })\n  }\n  componentDidMount(): void {\n    // this.loadTeams();\n  }\n\n\n\n  render() {\n    return (\n      <Container>\n        <Accordion >\n          <Card >\n            <Row className={\"header\"}>\n              <Col lg={4}>Team Name</Col>\n              <Col lg={2}>Players remaining</Col>\n              <Col lg={2}>Score</Col>\n              <Col lg={2}>Details</Col>\n            </Row>\n          </Card>\n          {this.state.teams.map( (team:Team, index)=>{\n            // return (<div key={index}>{team.name } asdfadsf</div>)\n            return (\n              <Card key={team.name}>\n\n                <Accordion.Toggle as={Card.Header} eventKey={team.name} >\n                <Row>\n                  {/*sdfg*/}\n              {/*  <Col lg={4}>{team.name}</Col>*/}\n              {/*  <Col lg={2}>{team.playersRemaining}</Col>*/}\n              {/*  <Col lg={2}>{team.score}</Col>*/}\n                </Row>\n              </Accordion.Toggle>\n              <Accordion.Collapse  eventKey={team.name}>\n              {/*/!*  /!*<Card.Body>*!/*!/*/}\n              {/*/!*  /!*  <TeamRoster*!/*!/*/}\n              {/*/!*  /!*    key={team.id}*!/*!/*/}\n              {/*/!*  /!*    players={team.players}/>*!/*!/*/}\n              {/*/!*  /!*</Card.Body>*!/*!/*/}\n              {/*/!*    yasssss*!/*/}\n              </Accordion.Collapse>\n\n            </Card>);\n          })}\n        </Accordion>\n\n      </Container>\n\n    )\n  }\n}","import {Player} from \"../../services/RosterService\";\nimport {GameStats} from \"../../services/GameService\";\nimport React from \"react\";\nimport {Button} from \"react-bootstrap\";\nimport _ from \"lodash\";\n\nexport interface IPlayerStatEntry {\n  player: Player;\n  stat?: GameStats;\n  round: string;\n}\n\nexport class PlayerStatEntry extends React.Component<IPlayerStatEntry> {\n\n  readonly state: IPlayerStatEntry;\n\n  constructor(params: IPlayerStatEntry) {\n    super(params);\n\n    console.log((params.round === \"wildCard\" && !_.isUndefined(params.player.wcw) + \" \" + params.round + \" \" + params.player.wcw));\n\n    if (params.round === \"wildCard\" && !_.isUndefined(params.player.wcw)) {\n      params.player.wcw.rushTdStr = params.player.wcw.rushTd.toString();\n      params.player.wcw.passRecTdStr = params.player.wcw.passRecTd.toString();\n      params.player.wcw.fgStr = params.player.wcw.fg.toString();\n      this.state = {\n        player: params.player, round: params.round, stat: params.player.wcw\n      };\n      this.forceUpdate();\n    }\n    else if (params.round === \"divisional\" && !_.isUndefined(params.player.div)){\n      params.player.div.rushTdStr = params.player.div.rushTd.toString();\n      params.player.div.passRecTdStr = params.player.div.passRecTd.toString();\n      params.player.div.fgStr = params.player.div.fg.toString();\n      this.state = {\n        player: params.player, round: params.round, stat: params.player.div\n      };\n      this.forceUpdate();\n    }\n    else {\n      this.state = {\n        player: params.player, round: params.round, stat: {\n          id: 0,\n          score: 0,\n          passYd: 0,\n          recYd: 0,\n          rushYd: 0,\n          tPt: 0,\n          rushTd: [],\n          rushTdStr: \"\",\n          passRecTd: [],\n          passRecTdStr: \"\",\n          xp: 0,\n          fg: [],\n          fgStr: \"\",\n          dst: 0,\n          elim: false,\n          playoffRound: params.round,\n        }\n      }\n    }\n    ;\n    this.hit = this.hit.bind(this);\n  }\n\n  hit() {\n\n    var localStat: GameStats | undefined;\n    if (this.state.stat !== undefined) {\n      var rtd = this.strToArray(this.state.stat.rushTdStr)\n      var ptd = this.strToArray(this.state.stat.passRecTdStr)\n      var fgt = this.strToArray(this.state.stat.fgStr)\n      localStat = {\n        id: this.state.stat.id!,\n        score: this.state.stat.score!,\n        passYd: this.state.stat.passYd!,\n        recYd: this.state.stat.recYd!,\n        rushYd: this.state.stat.rushYd!,\n        tPt: this.state.stat.tPt,\n        playoffRound: this.state.round,\n        rushTd: rtd,\n        passRecTd: ptd,\n        xp: this.state.stat.xp,\n        fg: fgt,\n        fgStr: \"\",\n        dst: this.state.stat.dst,\n        elim: this.state.stat.elim\n      };\n\n      console.log(JSON.stringify(localStat));\n\n      fetch(window.name + '/stat/player/' + this.state.player.id, {\n        method: 'POST',\n        body: JSON.stringify(localStat),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response => response.json())\n      .then(res => {\n        alert(\"saved\");\n      }).catch(err => {\n        alert(err);\n      });\n    }\n    // console.log(JSON.stringify(this.state.stat));\n  }\n\n  strToArray(data: string | undefined): Array<number> {\n    if (data !== undefined) {\n      if (data === \"\") {\n        return [];\n      }\n      var strArr = data.split(',');\n      var intArr = [];\n      var i = 0;\n      while (i < strArr.length) {\n        intArr.push(parseInt(strArr[i]));\n        i++;\n      }\n      return intArr;\n    }\n    return [];\n\n  }\n\n  render() {\n    return (\n      <tr>\n        <td className={\"nameClass\"}>{this.state.player.position}</td>\n        <td className={\"nameClass\"}>{this.state.player.name}</td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".passYd\"}\n            value={this.state.stat?.passYd}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, passYd: parseInt(data.target.value)}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".recYd\"}\n            value={this.state.stat?.recYd}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, recYd: parseInt(data.target.value)}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".rushYd\"}\n            value={this.state.stat?.rushYd}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, rushYd: parseInt(data.target.value)}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".tPt\"}\n            value={this.state.stat?.tPt}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, tPt: parseInt(data.target.value)}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".rushTd\"}\n            value={this.state.stat?.rushTdStr}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, rushTdStr: data.target.value}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".passRecTdStr\"}\n            value={this.state.stat?.passRecTdStr}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, passRecTdStr: data.target.value}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".fgStr\"}\n            value={this.state.stat?.fgStr}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, fgStr: data.target.value}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".xp\"}\n            value={this.state.stat?.xp}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, xp: parseInt(data.target.value)}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".dst\"}\n            value={this.state.stat?.dst}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, dst: parseInt(data.target.value)}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"checkbox\" id={this.state.player.id + \".eliminated\"}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, elim: !this.state.stat?.elim}})\n            }}/>\n        </td>\n        <td><Button onClick={() => {\n          this.hit();\n\n        }}>score</Button></td>\n\n\n      </tr>\n    )\n  }\n}","import React from \"react\";\nimport {NflTeam} from \"../../services/NflTeamService\";\nimport {Player} from \"../../services/RosterService\";\nimport {Button, Card, Col, Form, Row, Table, ToggleButton} from \"react-bootstrap\";\nimport './gameview.css'\nimport _ from \"lodash\";\nimport {PlayerStatEntry} from \"./PlayerStatEntry\";\n\ninterface IPlayerScoreRow {\n  team: NflTeam\n  players: Array<Player>;\n  round:string;\n}\n\nexport class PlayerScoreRow extends React.Component<IPlayerScoreRow> {\n\n  state: IPlayerScoreRow;\n\n  constructor(pickParam: IPlayerScoreRow) {\n    super(pickParam);\n    this.state = {team: pickParam.team, players: [], round: pickParam.round};\n    this.hit = this.hit.bind(this);\n  }\n\n  componentDidMount(): void {\n    fetch(window.name + \"/player/scoreView/byTeam?team=\"+this.state.team.name)\n    .then(response => response.json())\n    .then(data => {\n      var filterd = _.filter(data, (p: Player) => {\n        return (p.nflTeam.name === this.state.team.name && (!_.isUndefined(p.team1) ))\n      });\n      this.setState({\n        ...this.state, players: filterd\n      });\n    });\n\n  }\n\n\n  hit(e: React.ChangeEvent<HTMLInputElement>) {\n    this.state.players.map((player: Player) => {\n      if (e.target.id === player.id + \".passYd\") {\n        player.wcw.passYd = parseInt(e.target.value);\n      }\n    })\n    // console.log(e.target.id);\n  }\n\n\n  render() {\n    return (\n      <Card.Body className={\"teamHeader\"}>\n\n        <Row>\n          <Col lg={\"12\"}>\n            <Table striped bordered hover variant=\"dark\" size={\"small\"}>\n              <thead>\n              <tr>\n                <th className={\"nameClass\"}>Pos</th>\n                <th className={\"nameClass\"}>Player</th>\n                <th>passYd</th>\n                <th>recYd</th>\n                <th>rushYd</th>\n                <th>tPt</th>\n                <th>rushTd</th>\n                <th>passRecTd</th>\n                <th>fg</th>\n                <th>xp</th>\n                <th>dst</th>\n                <th>eliminated</th>\n                <th>go</th>\n              </tr>\n              </thead>\n              <tbody>\n              {this.state.players.map((player: Player) => {\n                return (\n                  <PlayerStatEntry key={player.id} player={player} round={this.state.round}/>\n                )\n              })}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n\n      </Card.Body>\n    );\n  }\n}","import * as React from \"react\";\nimport {FaTrashAlt, FaPencilAlt, FaPoop} from 'react-icons/fa';\nimport {Accordion, Card, Container, Row} from \"react-bootstrap\";\nimport _ from \"lodash\";\nimport {Game} from \"../../services/GameService\";\nimport Col from \"react-bootstrap/Col\";\nimport {Team} from \"../../services/TeamService\";\nimport {TeamRoster} from \"../Score/TeamRoster\";\nimport {PlayerScoreRow} from \"./PlayerScoreRow\";\n\ninterface IGameState {\n\n  games:Array<Game>;\n\n}\nexport class GameView extends React.Component<IGameState> {\n\n  state:IGameState;\n  constructor(pickParam: IGameState) {\n    super(pickParam);\n    this.state = {games:[]};\n  }\n  componentDidMount(): void {\n\n    console.log(\"componentDidMount\")\n    this.loadTeams();\n  }\n\n  loadTeams() {\n\n    console.log(\"loadTeams\")\n    fetch(window.name + \"/game\")\n    .then(response => response.json())\n    .then(data => {\n      console.log(data)\n      this.setState({...this.state, games: _.sortBy(data, 'order')})\n    })\n  }\n\n  render() {\n    return (\n      <Container>\n        <Accordion >\n          {this.state.games.map((game:Game)=>{\n            return (<Card>\n              <Accordion.Toggle as={Card.Header} eventKey={game.order.toString()}>\n                <Row>\n                  <Col lg={4}>{game.homeTeam.name} vs {game.awayTeam.name}</Col>\n                </Row>\n              </Accordion.Toggle>\n              <Accordion.Collapse  eventKey={game.order.toString()}>\n                <Card.Body>\n                  {game.homeTeam.name}\n                  <PlayerScoreRow key={game.homeTeam.name}\n                  team={game.homeTeam}\n                  players={[]}\n                  round={game.round}\n                  />\n                  {game.awayTeam.name}\n                  <PlayerScoreRow key={game.awayTeam.name}\n                                  team={game.awayTeam}\n                                  players={[]}\n                                  round={game.round}\n                  />\n                </Card.Body>\n\n              </Accordion.Collapse>\n            </Card>);\n          })}\n        </Accordion>\n      </Container>\n      );\n\n  }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {PlayerPage} from \"./admin/PlayersPage\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  RouteComponentProps, Switch\n} from \"react-router-dom\";\nimport {Players} from \"./public/Players\";\nimport {TeamPage} from \"./admin/TeamPage\";\nimport {DraftPage} from \"./admin/DraftPage\";\nimport {ScoresPage} from \"./admin/Score/ScoresPage\";\nimport {GameView} from \"./admin/games/GameView\";\nconst App: React.FC = () => {\n  // window.name = process.env.REACT_APP_HOST==undefined?'not':process.env.REACT_APP_HOST;\n  // window.name = \"http://localhost:8080\"\n  window.name=''\n  return (\n      // <div className=\"App\">\n      //      <header className=\"App-header\">\n      //        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      //      </header>\n      //    </div>\n\n    <Router>\n      <div className=\"App\">\n        <ul className=\"nav nav-tabs\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link \" href=\"/\">Scores</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/playerPage\">Player Page</a>\n          </li>\n\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/teamPage\">Team Page</a>\n          </li>\n\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/draftPage\">Draft</a>\n          </li>\n\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/gamez\">Games and stats</a>\n          </li>\n        </ul>\n\n\n        {/*<nav>*/}\n        {/*  /!*<Link to=\"/\">Home</Link>*!/*/}\n        {/*  <Link to=\"/foo\">Players</Link>*/}\n        {/*</nav>*/}\n        <Switch>\n          <Route exact path=\"/\" component={ScoresPage} />\n          <Route exact path=\"/playerPage\" component={PlayerPage} />\n          <Route exact path=\"/teamPage\" component={TeamPage} />\n          <Route exact path=\"/draftPage\" component={DraftPage} />\n          <Route exact path=\"/gamez\" component={GameView} />\n        </Switch>\n      </div>\n    </Router>\n\n  );\n\n  // return (\n  //   <Router>\n  //   <!--Each route is defined with Route-->\n  //   <Route path=\"/\" component={Home}/>\n  // </Router>)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render\n(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}