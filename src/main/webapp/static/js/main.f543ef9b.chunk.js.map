{"version":3,"sources":["admin/Roster.tsx","services/urlService.ts","admin/PlayersPage.tsx","admin/TeamPage.tsx","admin/DraftLine.tsx","admin/DraftPage.tsx","admin/Score/TeamRoster.tsx","admin/Score/ScoresPage.tsx","admin/games/PlayerStatEntry.tsx","admin/games/PlayerScoreRow.tsx","admin/games/GameView.tsx","public/Rules.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Roster","a","playersOrder","map","position","props","players","player","push","this","setState","data","p","undefined","team2","team1","className","value","index","getClazz","key","id","name","React","getUrl","window","PlayerPage","pro","state","nflTeams","teams","totalPicks","lastPick","getPlayers","bind","isLoading","fetch","then","response","json","setTotalPicks","_","sortBy","num","val","team","console","log","jawn","indexOf","splice","JSON","stringify","idx","Math","floor","length","filter","conf","nflTeam","Table","size","indx","getStyle","draftPos","getNeeds","TeamPage","teamName","teamEmail","handleChange","handleSubmit","randomDraft","deleteTeam","loadTeams","e","preventDefault","method","body","headers","res","catch","err","alert","event","target","email","onClick","Form","onSubmit","Row","Col","Control","type","onChange","Button","variant","startDraft","DraftLine","pickParam","scope","pick","roundPick","roundSelection","playerName","DraftPage","picks","pickNumber","logo","eliminated","wcw","score","passYd","recYd","rushYd","tPt","rushTd","passRecTd","xp","fg","dst","elim","playoffRound","editTeam","data2","orderBy","getPickNumber","found","i","playerId","draftPick","needs","teamId","pos","status","selected","toString","location","href","endsWith","labelKey","option","filterBy","options","placeholder","editPick","TeamRoster","params","Card","Body","lg","div","champ","sb","ScoresPage","Accordion","defaultActiveKey","Toggle","as","Header","eventKey","playersRemaining","Collapse","PlayerStatEntry","round","isUndefined","stat","rushTdStr","passRecTdStr","fgStr","forceUpdate","hit","localStat","rtd","strToArray","ptd","fgt","strArr","split","intArr","parseInt","Component","PlayerScoreRow","filterd","striped","bordered","hover","GameView","games","Container","game","order","homeTeam","awayTeam","Rules","ListGroup","Item","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f543ef9b.chunk.js","sourcesContent":["import * as React from \"react\";\nimport {Players} from \"../public/Players\";\nimport {Player} from \"../services/RosterService\";\nimport \"./Roster.css\"\ninterface RosterProps {\n  players: Array<Player>;\n}\nexport class Roster extends React.Component<RosterProps> {\n  playersOrder:Player[];\n  constructor(a:RosterProps) {\n    super(a);\n    this.playersOrder = [];\n    var positions: Array<string>;\n    positions = [\"QB\", \"RB\", \"WR\", \"TE\", \"K\", \"DST\"];\n    positions.map((position:string)=>{\n      this.props.players.map((player)=>{\n        if(player.position === position){\n          this.playersOrder.push(player);\n          // this.setState({...this.state, players:this.state.players.push(player)})\n        }\n      })\n    });\n\n  }\n\n  componentDidMount(): void {\n    this.setState({data:[]})\n  }\n\n  getClazz(p:Player ):string {\n    if(p.team2 != undefined){\n      return \"row text-left text-muted strike\"\n    }\n    else if(p.team1 != undefined){\n      return \"row text-left text-danger\"\n    }\n    return \"row text-left text-primary\";\n  }\n\n  render(){\n    return (\n      <div className=\"\">\n      {this.playersOrder.map((value:Player,index:number) => {\n          return (\n            <div className={this.getClazz(value)} key={value.id} >\n              <div className=\"col-2\">{value.position}</div>\n              <div className=\"col-8\">\n                {value.name}\n              </div>\n            </div>\n          )})}\n\n      </div>);\n  }\n}","\nexport var getUrl = function():string {\n  // return 'http://localhost:8080';\n  return window.name;\n};","import * as React from \"react\";\nimport './PlayerPage.css'\nimport {NflTeam} from \"../services/NflTeamService\";\nimport {Roster} from \"./Roster\";\nimport _ from \"lodash\";\nimport {Player} from \"../services/RosterService\";\nimport {Team} from \"../services/TeamService\";\nimport {getUrl} from \"../services/urlService\";\nimport {TeamPage} from \"./TeamPage\";\nimport {FaTrashAlt} from \"react-icons/fa\";\nimport Table from \"react-bootstrap/Table\";\n// import Timeout = NodeJS.Timeout;\n\nexport interface PlayerPageProps {\n  nflTeams: Array<NflTeam>;\n  players: Array<Player>;\n  teams: Array<Team>;\n  totalPicks: number;\n  lastPick: string;\n}\nexport class PlayerPage extends React.Component<PlayerPageProps> {\n\n  state:PlayerPageProps;\n  // timer:Timeout;\n  constructor(pro:PlayerPageProps) {\n    super(pro);\n    this.state = {nflTeams:[],players:[], teams:[], totalPicks: 0, lastPick: \"\"};\n    this.getPlayers = this.getPlayers.bind(this)\n    // setInterval(()=> this.getPlayers(), 1000);\n  }\n  getPlayers(){\n    this.setState({nflTeams: [], isLoading: true,players: []});\n    fetch(getUrl() +\"/player\")\n    .then(response => response.json())\n    .then(data =>{\n      this.setState({ players: data, isLoading: true})\n      return fetch(getUrl() +\"/static/nflTeams\")\n      .then(response => response.json())\n      .then(data =>{\n        this.setState({nflTeams: data, isLoading: false});\n        return fetch(getUrl() +\"/team\")\n        .then(response => response.json())\n        .then(data => {\n          this.setTotalPicks(data);\n          this.setState({...this.state, teams: _.sortBy(data, 'draftPos')})\n          // setInterval(()=>{\n          //   // this.setState({...this.state, lastPick: Date.now().toString()});\n          //   if(this.state.totalPicks == 0){\n          //     return;\n          //   }\n          //   fetch(getUrl() +\"/draft/currentPick/\"+ (this.state.totalPicks))\n          //   .then(response => response.text())\n          //   .then(data =>{\n          //     if(data === \"LOAD\"){\n          //       this.getPlayers()\n          //     }\n          //   });\n          // }, 15000);\n\n\n        })\n      } )\n    } );\n  }\n\n  setTotalPicks(teams: Array<Team>){\n    var num:number = 0;\n    this.state.players.map((val: Player) =>{\n      if(val.team1){\n        num = num +1;\n      }\n\n      if(val.team2){\n        num = num +1;\n      }\n    });\n    this.setState({...this.state, totalPicks: num})\n  }\n  componentDidMount() {\n    this.getPlayers();\n  }\n\n  getNeeds(team: Team):string{\n    var players:Array<string>;\n    players = [\"QB\",\"RB\",\"RB\",\"WR/TE\",\"WR/TE\",\"WR/TE\",\"K\",\"DST\"];\n    console.log(team.players)\n    if(team.players){\n      for(var p of team.players) {\n        var jawn:string = p.position;\n        if(jawn === \"TE\" || jawn ==\"WR\"){\n          jawn=\"WR/TE\";\n        }\n        if (players.indexOf(jawn) > -1) {\n          players.splice(players.indexOf(jawn), 1);\n        }\n      }\n    }\n    return JSON.stringify(players);\n  }\n\n\n\n  getStyle(idx:number):string{\n\n    var roundNum = Math.floor(this.state.totalPicks / this.state.teams.length) + 1;\n    //pick on way up\n    if(roundNum % 2 === 0 ){\n      console.log(\"this.state.totalPicks \" + this.state.totalPicks)\n      console.log(\"this.state.teams.length \" + this.state.teams.length)\n      console.log(\"idx \" + idx)\n\n      if(this.state.totalPicks % this.state.teams.length === ( (this.state.teams.length-1) - idx) ) {\n        return \"dude\";\n      }\n\n    }\n    //pick on way down ( odd round 1-n)\n    else{\n      if(this.state.totalPicks % this.state.teams.length === idx){\n        return \"dude\";\n      }\n    }\n\n    return \"\";\n  }\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          {_.filter(this.state.nflTeams,\n            (data:NflTeam)=> {return data.conf === 'AFC'}).map(\n              (value:NflTeam, index:number) => {\n            return(\n              <div className=\"col\"  key={value.name}>\n                   <div className=\"row \">\n                     <h3 className=\"col-12\">{value.name}</h3>\n                   </div>\n              <div className=\"row\">\n                <Roster key={value.name} players={_.filter(this.state.players, (data: Readonly<Player>) =>{\n                  return data.nflTeam.name === value.name;\n                }) }/>\n              </div>\n              </div>)})}\n        </div>\n\n        <div className=\"row\">\n          {_.filter(this.state.nflTeams,(data:NflTeam)=> {return data.conf === 'NFC'}).map((value:NflTeam, index:number) => {\n            return(\n              <div className=\"col\" key={value.name}>\n                <div className=\"row justify-content-center\">\n                  <h3>{value.name}</h3>\n                </div>\n                <div className=\"\">\n                  <Roster key={value.name} players={_.filter(this.state.players, (data: Readonly<Player>) =>{\n                    return data.nflTeam.name === value.name;\n                  }) }/>\n                </div>\n              </div>)})}\n        </div>\n\n        <div className=\"row\">\n          <h2 className=\"col-4\">Current Round: {Math.floor(this.state.totalPicks / this.state.teams.length) + 1}</h2>\n          <h2 className=\"col-4\">Current Pick: {( this.state.totalPicks % this.state.teams.length)+1}</h2>\n          <h2 className=\"col-4\">Last Pick at : {this.state.totalPicks}</h2>\n        </div>\n\n        <div className=\"row\">\n          <Table size={\"sm\"}>\n            <thead>\n            <tr>\n              <th>Draft Pos</th>\n              <th>Name</th>\n              <th>remaining</th>\n            </tr>\n            </thead>\n            <tbody>\n            {this.state.teams.map((value: Team, indx: number) => {\n              return (\n                <tr className={this.getStyle(indx)}>\n                  <td>{value.draftPos}</td>\n                  <td>{value.name}</td>\n                  <td>{this.getNeeds(value)}</td>\n                </tr>\n              );\n            })\n            }\n            </tbody>\n          </Table>\n        </div>\n      </div>\n    );\n\n  }\n}\n","import * as React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport './Team.css'\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport {Team} from \"../services/TeamService\";\nimport _ from \"lodash\";\nimport {FaTrashAlt} from 'react-icons/fa';\nimport {getUrl} from \"../services/urlService\";\n\nexport interface TeamPageProps {\n  teamName: string;\n  teamEmail: string;\n  teams: Array<Team>;\n}\nexport class TeamPage extends React.Component<TeamPageProps> {\n\n  state:TeamPageProps;\n\n  constructor(state:TeamPageProps) {\n    super(state);\n    this.state = {teamName: \"\", teamEmail:\"\", teams:[]}\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.randomDraft = this.randomDraft.bind(this);\n    this.deleteTeam = this.deleteTeam.bind(this);\n    this.getNeeds = this.getNeeds.bind(this);\n  }\n\n  loadTeams(){\n    fetch(getUrl() +\"/team\")\n    .then(response => response.json())\n    .then(data => {\n      this.setState({...this.state, teams: _.sortBy(data, 'draftPos')})\n    })\n  }\n  componentDidMount(): void {\n    this.loadTeams();\n  }\n\n  handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    console.log(this.state);\n    e.preventDefault();\n    fetch(getUrl()  +'/team', {\n      method: 'POST',\n      body: JSON.stringify({\"name\": this.state.teamName, \"email\": this.state.teamEmail}),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response => response.json())\n    .then(res => {\n      this.state.teams.push(res);\n      this.setState({...this.state, teams: _.sortBy(this.state.teams, 'draftPos'),\n          teamName: \"\", teamEmail:\"\"})\n    }).catch(err => {\n      alert(err);\n    });\n  }\n\n  handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    if (event.target.id === 'name') {\n      this.setState({...this.state, teamName: event.target.value});\n    }\n    if (event.target.id === 'email') {\n      this.setState({...this.state, teamEmail: event.target.value});\n    }\n\n  }\n\n  randomDraft() {\n\n    fetch(getUrl() +\"/team/shuffle\")\n    .then(response => response.json())\n    .then(data => {\n      this.setState({...this.state, teams: _.sortBy(data, 'draftPos')})\n    })\n  };\n\n  deleteTeam(id:number){\n    fetch(getUrl() +\"/team/\"+id,{\n      method: \"DELETE\"})\n    .then(data => {\n      this.setState({...this.state, teams: _.sortBy(data, 'draftPos')})\n    })\n  }\n\n  startDraft(){\n    fetch(getUrl() +\"/draft/start\",{\n      method: \"GET\"})\n    .then(data => {\n      alert(\"Draft is started , no mo teams can be added.\")\n    })\n  }\n\n  getNeeds(team: Team):string{\n    var players:Array<string>;\n    players = [\"QB\",\"RB\",\"RB\",\"WR/TE\",\"WR/TE\",\"WR/TE\",\"K\",\"DST\"];\n    console.log(team.players)\n    if(team.players){\n      for(var p of team.players) {\n        var jawn:string = p.position;\n        if(jawn === \"TE\" || jawn ==\"WR\"){\n          jawn=\"WR/TE\";\n        }\n        if (players.indexOf(jawn) > -1) {\n          players.splice(players.indexOf(jawn), 1);\n        }\n      }\n    }\n    return JSON.stringify(players);\n  }\n\n  render() {\n    return (\n      <div className={\"row\"}>\n        <Table size={\"sm\"}>\n          <thead>\n          <tr>\n            <th>Draft Pos</th>\n            <th>Name</th>\n            <th>email</th>\n            <th>remaining</th>\n            <th>util</th>\n          </tr>\n          </thead>\n          <tbody>\n          {this.state.teams.map((value: Team, indx: number) => {\n            return (\n              <tr>\n                <td>{value.draftPos}</td>\n                <td>{value.name}</td>\n                <td>{value.email}</td>\n                <td>{this.getNeeds(value)}</td>\n                <td><FaTrashAlt onClick={()=>{this.deleteTeam(value.id)}}/></td>\n              </tr>\n            );\n          })\n          }\n          </tbody>\n        </Table>\n        <div className={\"row\"}>\n\n        </div>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Row>\n            <Col>\n              <Form.Control id=\"name\" type=\"text\" value={this.state.teamName} onChange={this.handleChange}/>\n            </Col>\n            <Col>\n              <Form.Control id=\"email\" type=\"text\" value={this.state.teamEmail} onChange={this.handleChange}/>\n\n            </Col>\n            <Col>\n              <Button variant=\"primary\" type=\"submit\">\n                Add Team\n              </Button>\n            </Col>\n\n            <Col>\n              <Button variant=\"primary\" onClick={this.randomDraft}>\n                shuffle draft\n              </Button>\n\n            </Col>\n\n            <Col>\n              <Button variant=\"primary\" onClick={this.startDraft}>\n                Start draft\n              </Button>\n\n            </Col>\n          </Form.Row>\n\n        </Form>\n      </div>\n\n    )\n  }\n}","import * as React from \"react\";\nimport {DraftPick} from \"../services/DraftService\";\nimport {FaTrashAlt, FaPencilAlt, FaPoop} from 'react-icons/fa';\nimport {Player} from \"../services/RosterService\";\nimport './DraftPage.css'\n\ninterface IState {\n  pick: DraftPick;\n  players: Array<Player>\n  pickNumber: number;\n  editPick: (num:number)=>void;\n  getNeeds: (num:string)=>void;\n\n}\nexport class DraftLine extends React.Component<IState> {\n\n  state:IState;\n  constructor(pickParam: IState) {\n\n    super(pickParam);\n    this.state = pickParam;\n  }\n\n  render() {\n    return (\n      <tr>\n        <th scope=\"row\">{this.state.pick.draftPos}</th>\n        <td>{this.state.pick.roundPick + \".\" + this.state.pick.roundSelection}</td>\n        <td>{this.state.pick.teamName}</td>\n        <td>{this.state.pick.playerName}</td>\n        {/*<td>*/}\n        {/*  <FaPencilAlt onClick={()=>{this.state.editPick(this.state.pick.draftPos)}}/>*/}\n        {/*</td>*/}\n      </tr>\n      );\n\n  }\n\n\n\n\n\n}","import * as React from \"react\";\nimport _ from \"lodash\";\nimport {Typeahead} from 'react-bootstrap-typeahead';\nimport {Player} from \"../services/RosterService\";\nimport {Button, Col, Form} from \"react-bootstrap\";\nimport {DraftLine} from \"./DraftLine\";\nimport {DraftPick} from \"../services/DraftService\";\nimport {Team} from \"../services/TeamService\";\nimport './DraftPage.css';\nimport {getUrl} from \"../services/urlService\";\n\ninterface DraftPageProps {\n  players: Array<Player>;\n  teams: Array<Team>;\n  player: Player;\n  picks: Array<DraftPick>;\n  pickNumber: number;\n}\n\nexport class DraftPage extends React.Component<DraftPageProps> {\n\n  state: DraftPageProps;\n\n  constructor(state: DraftPageProps) {\n    super(state);\n    this.state = {\n      players: [],\n      teams: [],\n      picks: [],\n      pickNumber: 1,\n      player: {\n        position: \"\",\n        id: 0,\n        name: \"\",\n        nflTeam: {name: \"\", conf: \"\", logo: \"\"},\n        team1: undefined,\n        team2: undefined,\n        eliminated: false,\n        wcw: {\n          id: 0,\n          score: 0,\n          passYd: 0,\n          recYd: 0,\n          rushYd: 0,\n          tPt: 0,\n\n          rushTd: [],\n          passRecTd: [],\n\n          xp: 0,\n          fg: [],\n          dst: 0,\n          elim: false,\n          playoffRound: \"\"\n        }\n      },\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.editTeam = this.editTeam.bind(this);\n    this.getNeeds = this.getNeeds.bind(this);\n\n  }\n\n  loadTeams() {\n\n    fetch(getUrl() + \"/team\")\n    .then(response => response.json())\n    .then(data => {\n      this.setState({...this.state, teams: _.sortBy(data, 'draftPos')})\n      return fetch(getUrl() + \"/player\")\n      .then(response => response.json())\n      .then(data => {\n        console.log(\" data \" + data)\n        var data2 = _.filter(data, (p:Player) =>{\n          return !(p.team1 && p.team2)\n        })\n        this.setState({...this.state, players: data2})\n\n        console.log(\" data 2\")\n        return fetch(getUrl() + \"/draft\")\n        .then(response => response.json())\n        .then(data => {\n          this.setState({\n            ...this.state,\n            picks: _.orderBy(data, ['draftPos']),\n            pickNumber: this.getPickNumber(_.orderBy(data, ['draftPos']))\n          })\n        })\n      })\n    })\n  }\n\n\n  getPickNumber(picks: Array<DraftPick>): number {\n    if (picks.length === 0) {\n      return 1;\n    }\n    var found: boolean = false;\n    var i: number = 0;\n    while (!found) {\n      if (i == picks.length) {\n        found = true;\n        i = 0;\n      }\n      if (picks[i].playerId == 0 || picks[i].playerId == undefined) {\n        found = true;\n      } else {\n        i = i + 1;\n      }\n      // found = true;\n    }\n    // return  _.filter(picks,(p:DraftPick)=>{return p.playerId == 0})[0].draftPos;\n    return i + 1;\n\n  }\n\n  componentDidMount(): void {\n    this.loadTeams();\n  }\n\n\n  handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n\n    const draftPick: DraftPick = this.state.picks[this.state.pickNumber - 1];\n    const needs:Array<string> = this.getNeeds(draftPick.teamId);\n    const pos:string = (\n      this.state.player.position === \"WR\" || this.state.player.position === \"TE\") ? \"WR/TE\": this.state.player.position;\n    if(_.indexOf(needs,pos) === -1){\n\n      alert(\"you dont need that position.\")\n      return;\n    }\n\n\n    e.preventDefault();\n\n    fetch( getUrl()+ '/draft/pick/' + draftPick.id\n      + \"?playerId=\" + this.state.player.id, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    }).then(res => {\n\n      if (res.status == 200) {\n        this.state.picks[this.state.pickNumber - 1].playerName = this.state.player.name;\n        this.state.picks[this.state.pickNumber - 1].playerId = this.state.player.id;\n        this.setState({...this.state, pickNumber: this.getPickNumber(this.state.picks),player: undefined  });\n        // this.setState({...this.state, });\n      } else {\n        alert(\"something went wrong try refreshing... \")\n      }\n      console.log(res);\n\n    }).catch(err => {\n      console.log(err)\n    });\n\n\n  }\n\n  handleChange(selected: Player[]) {\n    this.setState({...this.state, player: selected[0]})\n  }\n\n  editTeam(draftPos: number) {\n    this.setState({...this.state, pickNumber: draftPos});\n  }\n\n  getNeeds(teamId: string): Array<string> {\n    var players: Array<string> = [];\n    this.state.teams.map((team: Team) => {\n      if (team.id.toString() == teamId) {\n\n        players = [\"QB\", \"RB\", \"RB\", \"WR/TE\", \"WR/TE\", \"WR/TE\", \"K\", \"DST\"];\n        if (team.players) {\n\n          for (var p of team.players) {\n            var jawn: string = p.position;\n            if (jawn === \"TE\" || jawn == \"WR\") {\n              jawn = \"WR/TE\";\n            }\n            if (players.indexOf(jawn) > -1) {\n              players.splice(players.indexOf(jawn), 1);\n            }\n          }\n        }\n        // alert(players);\n      }\n    });\n    return players;\n  }\n\n  render() {\n    // var data : Player[] = _.filter(this.state.players, (player: Player) =>{\n    //   return player.team1 || player.team2;\n    // });\n    return (\n      <div>\n\n        {window.location.href.endsWith(\"x\") ?\n        <div className={\"row tableFixHead\"}>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Row>\n              {/*<Col>Pick {this.state.pickNumber} for team {this.state.picks[this.state.pickNumber-1]} </Col>*/}\n              <Col>\n                <Typeahead\n                  id={\"playersTypeAhead\"}\n                  labelKey={(option: Player) => option.name + '-' + option.position}\n                  // labelKey={'name'}\n                  filterBy={['name']}\n                  // multiple={multiple}\n                  options={this.state.players}\n                  // labelKey={o => {o.name} }\n                  placeholder=\"Player\"\n                  // selected={this.state.selected}\n                  onChange={this.handleChange}\n                />\n              </Col>\n              {/*<Col>*/}\n              {/*    <Form.Control id=\"email\" type=\"text\" value={this.state.newTeam.email} onChange={this.handleChange}/>*/}\n\n              {/*</Col>*/}\n              <Col>\n                <Button variant=\"primary\" type=\"submit\">\n                  Draft Player\n                </Button>\n              </Col>\n            </Form.Row>\n\n          </Form>\n        </div>\n          : null}\n        <table className=\"table col-8\">\n          <thead>\n          <tr>\n            <th scope=\"col\">pick#</th>\n            <th scope=\"col\">round.Pick</th>\n            <th scope=\"col\">Team</th>\n            <th scope=\"col\">Player</th>\n            {/*<th scope=\"col\">Utils</th>*/}\n          </tr>\n          </thead>\n          {          console.log(\"called render\")\n          }\n          <tbody>\n          {\n            // if(this.props.picks === undefined) {\n            //\n            // }\n\n            this.state.picks.map((pickParam: DraftPick, indx: number) => {\n            pickParam.roundSelection = (indx%this.state.teams.length) +1 ;\n              return (\n              // <div className={this.state.pickNumber === pickParam.draftPos ? \" pick otline \" : \"otline\"}>\n                <DraftLine key={pickParam.id}\n                           pick={pickParam}\n                           players={this.state.players}\n                           pickNumber={this.state.pickNumber}\n                           editPick={this.editTeam}\n                           getNeeds={this.getNeeds}/>\n              // </div>\n          )\n          })}\n\n\n          </tbody>\n        </table>\n\n      </div>\n    );\n  }\n}\n\ninterface PlayerLine {\n\n  players: [],\n  teams: [],\n  picks: [],\n  pickNumber: 1,\n  player: {\n    position: \"\",\n    id: 0,\n    name: \"\",\n    nflTeam: { name: \"\", conf: \"\", logo: \"\" },\n    team1: undefined,\n    team2: undefined,\n    eliminated: false,\n    wcw: {\n      id: 0,\n      score: 0,\n      passYd: 0,\n      recYd: 0,\n      rushYd: 0,\n      tPt: 0,\n\n      rushTd: [],\n      passRecTd: [],\n\n      xp: 0,\n      fg: [],\n      dst: 0,\n      elim: false,\n      playoffRound: \"\"\n    }\n  }\n};","import * as React from \"react\";\nimport {Player} from \"../../services/RosterService\";\nimport {Card, Col, Row} from \"react-bootstrap\";\nimport './TeamRoster.css'\nexport interface TeamRosterState {\n  players: Array<Player>;\n}\nexport class TeamRoster extends React.Component<TeamRosterState> {\n\n  state:TeamRosterState;\n\n  constructor(params: TeamRosterState) {\n    super(params);\n    var players: Array<string>;\n    players = [\"QB\", \"RB\", \"RB\", \"WR/TE\", \"WR/TE\", \"WR/TE\", \"K\", \"DST\"];\n    var orderedPlayers:Array<Player>;\n    this.state = {players:[]};\n    var positions: Array<string>;\n    positions = [\"QB\", \"RB\", \"WR\", \"TE\", \"K\", \"DST\"];\n    positions.map((position:string)=>{\n      params.players.map((player)=>{\n        if(player.position === position){\n          this.setState({...this.state, players:this.state.players.push(player)})\n        }\n      })\n    });\n\n  }\n\n  render(){\n\n  return(\n    <Card.Body className={\"teamHeader\"}>\n      <Row>\n\n        <Col lg={\"1\"} >\n          Pos.\n        </Col>\n      <Col lg={\"2\"} >\n        Player\n      </Col>\n\n        <Col lg={\"1\"} >\n          Wild card\n        </Col>\n\n        <Col lg={\"1\"} >\n          Divisonal\n        </Col>\n\n        <Col lg={\"2\"} >\n          Championship\n        </Col>\n\n        <Col lg={\"2\"} >\n          Super bowl\n        </Col>\n        <Col lg={\"1\"} >\n          Total\n        </Col>\n\n\n        </Row>\n      {this.state.players.map((player:Player) => {\n\n        return(\n          <Row className={(player.eliminated ? \"eliminated\":\"\")} key={player.id}>\n\n          <Col lg={\"1\"} >\n            {player.position}\n          </Col>\n\n          <Col lg={\"2\"} >\n          {player.name}\n          </Col>\n\n          <Col lg={\"1\"} >\n            {player.wcw == undefined ? \"x\": player.wcw.score }\n          </Col>\n\n          <Col lg={\"1\"} >\n            {player.div == undefined ? \"x\": player.div.score }\n          </Col>\n\n          <Col lg={\"2\"} >\n            {player.champ == undefined ? \"x\": player.champ.score }\n          </Col>\n\n          <Col lg={\"2\"} >\n            {player.sb == undefined ? \"x\": player.sb.score }\n          </Col>\n          <Col lg={\"1\"} >\n            {(player.wcw == undefined ? 0:  player.wcw.score) +\n            (player.div == undefined ? 0: player.div.score ) +\n            (player.champ == undefined ? 0: player.champ.score )\n            +\n            (player.sb == undefined ? 0: player.sb.score )}\n          </Col>\n          </Row>)\n      })}\n    </Card.Body>\n\n  );\n  }\n}","import * as React from \"react\";\nimport './ScoresPage.css'\nimport Col from \"react-bootstrap/Col\";\nimport _ from \"lodash\";\n\nimport {Accordion, Card, Container, Row} from \"react-bootstrap\";\nimport {Team} from \"../../services/TeamService\";\nimport {TeamRoster} from \"./TeamRoster\";\nimport {getUrl} from \"../../services/urlService\";\n\nexport interface ScorePageState {\n  teams: Array<Team>;\n}\nexport class ScoresPage extends React.Component<ScorePageState>{\n\n  state:ScorePageState;\n\n  constructor(state:ScorePageState) {\n    super(state);\n    this.state = {teams:[]};\n    // this.loadTeams();\n  }\n\n  loadTeams(){\n    fetch(getUrl() +\"/team/scoreView\")\n    // fetch(\"http://20200103t024800-dot-bdsplayoffleague.appspot.com/team/scoreView\")\n    .then(response => response.json())\n    .then(data => {\n      console.log(data)\n      // this.setState({...this.state, teams: _.orderBy(data, 'id','desc')})\n      this.setState({...this.state, teams:data})\n    })\n  }\n  componentDidMount(): void {\n    this.loadTeams();\n  }\n\n\n\n  render() {\n    return (\n      // <Container>\n      //   <Accordion >\n      //     <Card >\n      //       <Row className={\"header\"}>\n      //         <Col lg={4}>Team Name</Col>\n      //         <Col lg={2}>Players remaining</Col>\n      //         <Col lg={2}>Score</Col>\n      //         <Col lg={2}>Details</Col>\n      //       </Row>\n      //     </Card>\n      //     {this.state.teams.map( (team:Team, index)=>{\n      //       // return (<div key={index}>{team.name } asdfadsf</div>)\n      //       return (\n      //         <Card key={team.name}>\n      //\n      //           <Accordion.Toggle as={Card.Header} eventKey={team.name} >\n      //           <Row>\n      //             {/*sdfg*/}\n      //         {/*  <Col lg={4}>{team.name}</Col>*/}\n      //         {/*  <Col lg={2}>{team.playersRemaining}</Col>*/}\n      //         {/*  <Col lg={2}>{team.score}</Col>*/}\n      //           </Row>\n      //         </Accordion.Toggle>\n      //         <Accordion.Collapse  eventKey={team.name}>\n      //         {/*  /!*<Card.Body>*!/*/}\n      //         {/*  /!*  <TeamRoster*!/*/}\n      //         {/*  /!*    key={team.id}*!/*/}\n      //         {/*  /!*    players={team.players}/>*!/*/}\n      //         {/*  /!*</Card.Body>*!/*/}\n      //         {/*    yasssss*/}\n      //         </Accordion.Collapse>\n      //\n      //       </Card>);\n      //     })}\n      //   </Accordion>\n      //\n      // </Container>\n\n\n      <Accordion defaultActiveKey=\"0\">\n        <Card>\n          <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n            <Row>\n              <Col lg={4}>Team Name</Col>\n              <Col lg={2}>Players remaining</Col>\n              <Col lg={2}>Score</Col>\n              {/*<Col lg={2}>Details</Col>*/}\n            </Row>\n          </Accordion.Toggle>\n        </Card>\n\n        {\n          this.state.teams.map( (team:Team, index)=>{\n            return (\n              <Card key={team.name}>\n                <Accordion.Toggle as={Card.Header} eventKey={team.name}>\n                  <Row>\n                    <Col lg={4}>{team.name}</Col>\n                      <Col lg={2}>{team.playersRemaining}</Col>\n                      <Col lg={2}>{team.score}</Col>\n                    </Row>\n                </Accordion.Toggle>\n                <Accordion.Collapse eventKey={team.name}>\n                  <Card.Body>\n                    <TeamRoster\n                      key={team.id}\n                      players={team.players}/>\n                  </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n            ) ;\n          })\n        }\n\n      </Accordion>\n\n\n    );\n  }\n}","import {Player} from \"../../services/RosterService\";\nimport {GameStats} from \"../../services/GameService\";\nimport React from \"react\";\nimport {Button} from \"react-bootstrap\";\nimport _ from \"lodash\";\n\nexport interface IPlayerStatEntry {\n  player: Player;\n  stat?: GameStats;\n  round: string;\n}\n\nexport class PlayerStatEntry extends React.Component<IPlayerStatEntry> {\n\n  readonly state: IPlayerStatEntry;\n\n  constructor(params: IPlayerStatEntry) {\n    super(params);\n\n    console.log((params.round === \"wildCard\" && !_.isUndefined(params.player.wcw) + \" \" + params.round + \" \" + params.player.wcw));\n\n    if (params.round === \"wildCard\" && !_.isUndefined(params.player.wcw)) {\n      params.player.wcw.rushTdStr = params.player.wcw.rushTd.toString();\n      params.player.wcw.passRecTdStr = params.player.wcw.passRecTd.toString();\n      params.player.wcw.fgStr = params.player.wcw.fg.toString();\n      this.state = {\n        player: params.player, round: params.round, stat: params.player.wcw\n      };\n      this.forceUpdate();\n    }\n    else if (params.round === \"divisional\" && !_.isUndefined(params.player.div)){\n      params.player.div.rushTdStr = params.player.div.rushTd.toString();\n      params.player.div.passRecTdStr = params.player.div.passRecTd.toString();\n      params.player.div.fgStr = params.player.div.fg.toString();\n      this.state = {\n        player: params.player, round: params.round, stat: params.player.div\n      };\n      this.forceUpdate();\n    }\n    else {\n      this.state = {\n        player: params.player, round: params.round, stat: {\n          id: 0,\n          score: 0,\n          passYd: 0,\n          recYd: 0,\n          rushYd: 0,\n          tPt: 0,\n          rushTd: [],\n          rushTdStr: \"\",\n          passRecTd: [],\n          passRecTdStr: \"\",\n          xp: 0,\n          fg: [],\n          fgStr: \"\",\n          dst: 0,\n          elim: false,\n          playoffRound: params.round,\n        }\n      }\n    }\n    ;\n    this.hit = this.hit.bind(this);\n  }\n\n  hit() {\n\n    var localStat: GameStats | undefined;\n    if (this.state.stat !== undefined) {\n      var rtd = this.strToArray(this.state.stat.rushTdStr)\n      var ptd = this.strToArray(this.state.stat.passRecTdStr)\n      var fgt = this.strToArray(this.state.stat.fgStr)\n      localStat = {\n        id: this.state.stat.id!,\n        score: this.state.stat.score!,\n        passYd: this.state.stat.passYd!,\n        recYd: this.state.stat.recYd!,\n        rushYd: this.state.stat.rushYd!,\n        tPt: this.state.stat.tPt,\n        playoffRound: this.state.round,\n        rushTd: rtd,\n        passRecTd: ptd,\n        xp: this.state.stat.xp,\n        fg: fgt,\n        fgStr: \"\",\n        dst: this.state.stat.dst,\n        elim: this.state.stat.elim\n      };\n\n      console.log(JSON.stringify(localStat));\n\n      fetch(window.name + '/stat/player/' + this.state.player.id, {\n        method: 'POST',\n        body: JSON.stringify(localStat),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response => response.json())\n      .then(res => {\n        alert(\"saved\");\n      }).catch(err => {\n        alert(err);\n      });\n    }\n    // console.log(JSON.stringify(this.state.stat));\n  }\n\n  strToArray(data: string | undefined): Array<number> {\n    if (data !== undefined) {\n      if (data === \"\") {\n        return [];\n      }\n      var strArr = data.split(',');\n      var intArr = [];\n      var i = 0;\n      while (i < strArr.length) {\n        intArr.push(parseInt(strArr[i]));\n        i++;\n      }\n      return intArr;\n    }\n    return [];\n\n  }\n\n  render() {\n    return (\n      <tr>\n        <td className={\"nameClass\"}>{this.state.player.position}</td>\n        <td className={\"nameClass\"}>{this.state.player.name}</td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".passYd\"}\n            value={this.state.stat?.passYd}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, passYd: parseInt(data.target.value)}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".recYd\"}\n            value={this.state.stat?.recYd}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, recYd: parseInt(data.target.value)}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".rushYd\"}\n            value={this.state.stat?.rushYd}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, rushYd: parseInt(data.target.value)}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".tPt\"}\n            value={this.state.stat?.tPt}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, tPt: parseInt(data.target.value)}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".rushTd\"}\n            value={this.state.stat?.rushTdStr}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, rushTdStr: data.target.value}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".passRecTdStr\"}\n            value={this.state.stat?.passRecTdStr}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, passRecTdStr: data.target.value}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".fgStr\"}\n            value={this.state.stat?.fgStr}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, fgStr: data.target.value}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".xp\"}\n            value={this.state.stat?.xp}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, xp: parseInt(data.target.value)}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".dst\"}\n            value={this.state.stat?.dst}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, dst: parseInt(data.target.value)}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"checkbox\" id={this.state.player.id + \".eliminated\"}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, elim: !this.state.stat?.elim}})\n            }}/>\n        </td>\n        <td><Button onClick={() => {\n          this.hit();\n\n        }}>score</Button></td>\n\n\n      </tr>\n    )\n  }\n}","import React from \"react\";\nimport {NflTeam} from \"../../services/NflTeamService\";\nimport {Player} from \"../../services/RosterService\";\nimport {Button, Card, Col, Form, Row, Table, ToggleButton} from \"react-bootstrap\";\nimport './gameview.css'\nimport _ from \"lodash\";\nimport {PlayerStatEntry} from \"./PlayerStatEntry\";\n\ninterface IPlayerScoreRow {\n  team: NflTeam\n  players: Array<Player>;\n  round:string;\n}\n\nexport class PlayerScoreRow extends React.Component<IPlayerScoreRow> {\n\n  state: IPlayerScoreRow;\n\n  constructor(pickParam: IPlayerScoreRow) {\n    super(pickParam);\n    this.state = {team: pickParam.team, players: [], round: pickParam.round};\n    this.hit = this.hit.bind(this);\n  }\n\n  componentDidMount(): void {\n    fetch(window.name + \"/player/scoreView/byTeam?team=\"+this.state.team.name)\n    .then(response => response.json())\n    .then(data => {\n      var filterd = _.filter(data, (p: Player) => {\n        return (p.nflTeam.name === this.state.team.name && (!_.isUndefined(p.team1) ))\n      });\n      this.setState({\n        ...this.state, players: filterd\n      });\n    });\n\n  }\n\n\n  hit(e: React.ChangeEvent<HTMLInputElement>) {\n    this.state.players.map((player: Player) => {\n      if (e.target.id === player.id + \".passYd\") {\n        player.wcw.passYd = parseInt(e.target.value);\n      }\n    })\n    // console.log(e.target.id);\n  }\n\n\n  render() {\n    return (\n      <Card.Body className={\"teamHeader\"}>\n\n        <Row>\n          <Col lg={\"12\"}>\n            <Table striped bordered hover variant=\"dark\" size={\"small\"}>\n              <thead>\n              <tr>\n                <th className={\"nameClass\"}>Pos</th>\n                <th className={\"nameClass\"}>Player</th>\n                <th>passYd</th>\n                <th>recYd</th>\n                <th>rushYd</th>\n                <th>tPt</th>\n                <th>rushTd</th>\n                <th>passRecTd</th>\n                <th>fg</th>\n                <th>xp</th>\n                <th>dst</th>\n                <th>eliminated</th>\n                <th>go</th>\n              </tr>\n              </thead>\n              <tbody>\n              {this.state.players.map((player: Player) => {\n                return (\n                  <PlayerStatEntry key={player.id} player={player} round={this.state.round}/>\n                )\n              })}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n\n      </Card.Body>\n    );\n  }\n}","import * as React from \"react\";\nimport {FaTrashAlt, FaPencilAlt, FaPoop} from 'react-icons/fa';\nimport {Accordion, Card, Container, Row} from \"react-bootstrap\";\nimport _ from \"lodash\";\nimport {Game} from \"../../services/GameService\";\nimport Col from \"react-bootstrap/Col\";\nimport {Team} from \"../../services/TeamService\";\nimport {TeamRoster} from \"../Score/TeamRoster\";\nimport {PlayerScoreRow} from \"./PlayerScoreRow\";\nimport {getUrl} from \"../../services/urlService\";\n\ninterface IGameState {\n\n  games:Array<Game>;\n\n}\nexport class GameView extends React.Component<IGameState> {\n\n  state:IGameState;\n  constructor(pickParam: IGameState) {\n    super(pickParam);\n    this.state = {games:[]};\n  }\n  componentDidMount(): void {\n\n    console.log(\"componentDidMount\")\n    this.loadTeams();\n  }\n\n  loadTeams() {\n\n    console.log(\"loadTeams\")\n    fetch(getUrl() + \"/game\")\n    .then(response => response.json())\n    .then(data => {\n      console.log(data)\n      this.setState({...this.state, games: _.sortBy(data, 'order')})\n    })\n  }\n\n  render() {\n    return (\n      <Container>\n        <Accordion >\n          {this.state.games.map((game:Game)=>{\n            return (<Card>\n              <Accordion.Toggle as={Card.Header} eventKey={game.order.toString()}>\n                <Row>\n                  <Col lg={4}>{game.homeTeam.name} vs {game.awayTeam.name}</Col>\n                </Row>\n              </Accordion.Toggle>\n              <Accordion.Collapse  eventKey={game.order.toString()}>\n                <Card.Body>\n                  {game.homeTeam.name}\n                  <PlayerScoreRow key={game.homeTeam.name}\n                  team={game.homeTeam}\n                  players={[]}\n                  round={game.round}\n                  />\n                  {game.awayTeam.name}\n                  <PlayerScoreRow key={game.awayTeam.name}\n                                  team={game.awayTeam}\n                                  players={[]}\n                                  round={game.round}\n                  />\n                </Card.Body>\n\n              </Accordion.Collapse>\n            </Card>);\n          })}\n        </Accordion>\n      </Container>\n      );\n\n  }\n}","import React from \"react\";\nimport {Card, ListGroup, Table} from \"react-bootstrap\";\n\nexport interface RulesProps {}\n//   teamName: string;\n//   teamEmail: string;\n//   teams: Array<Team>;\n// }\nexport class Rules extends React.Component<RulesProps> {\n\n  constructor(state:RulesProps) {\n    super(state);\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <Card className=\"text-left\">\n          <Card.Header>Players</Card.Header>\n          <Card.Body>\n            <Table striped bordered size=\"sm\">\n              <thead>\n              <tr>\n                <th>TD Distance</th>\n                <th>Rushing</th>\n                <th>Receiving & Passing</th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr>\n                <td>0-9 yards</td>\n                <td>10 pts</td>\n                <td>5 pts</td>\n              </tr>\n              <tr>\n                <td>10-19 yards</td>\n                <td>12 pts</td>\n                <td>6 pts</td>\n              </tr>\n              <tr>\n                <td>20-29 yards</td>\n                <td>14 pts</td>\n                <td>7 pts</td>\n              </tr>\n              <tr>\n                <td>30-39 yards</td>\n                <td>16 pts</td>\n                <td>8 pts</td>\n              </tr>\n              <tr>\n                <td>40-49 yards</td>\n                <td>18 pts</td>\n                <td>9 pts</td>\n              </tr>\n              <tr>\n                <td>50-59 yards</td>\n                <td>20 pts</td>\n                <td>10 pts</td>\n              </tr>\n              <tr>\n                <td>60+ yards</td>\n                <td>25 pts</td>\n                <td>15 pts</td>\n              </tr>\n            </tbody>\n            </Table>\n\n\n            <Table striped bordered size=\"sm\">\n              <thead>\n              <tr>\n                <th>yardage per game </th>\n                <th>Rushing</th>\n                <th>Receiving & Passing</th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr>\n                <td>1 point per </td>\n                <td>10 yards</td>\n                <td>20 yards</td>\n              </tr>\n              </tbody>\n            </Table>\n\n            <ListGroup>\n              <ListGroup.Item>All 2pt conversions will count as 2 points.</ListGroup.Item>\n              <ListGroup.Item>A lateral will count a rushing TD for the player who scores and the distance is from the point of the lateral</ListGroup.Item>\n              <ListGroup.Item>If your player fumbles, then recovers himself, they will get they distance from the line of scrimage</ListGroup.Item>\n            </ListGroup>\n          </Card.Body>\n        </Card>\n\n\n        <Card className=\"text-left\">\n          <Card.Header>Kicking </Card.Header>\n          <Card.Body>\n            <Table striped bordered size=\"sm\">\n              <thead>\n              <tr>\n                <th>Distance</th>\n                <th>points</th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr>\n                <td>1-39 yards</td>\n                <td>5 pts</td>\n              </tr>\n              <tr>\n                <td>40-49 yards</td>\n                <td>7 pts</td>\n              </tr>\n              <tr>\n                <td>50+ yards</td>\n                <td>10 pts</td>\n              </tr>\n              </tbody>\n            </Table>\n\n            <ListGroup>\n              <ListGroup.Item>Extra points are 2 points. </ListGroup.Item>\n            </ListGroup>\n          </Card.Body>\n        </Card>\n\n        <Card className=\"text-left\">\n          <Card.Header>Special teams and Defense </Card.Header>\n          <Card.Body>\n\n            <ListGroup>\n              <ListGroup.Item>5 points for a win</ListGroup.Item>\n              <ListGroup.Item>5 points for scoring 40 or more</ListGroup.Item>\n              <ListGroup.Item>5 points for holding a team wihtout a TD</ListGroup.Item>\n              <ListGroup.Item>10 points for a shutout</ListGroup.Item>\n              <ListGroup.Item>10 points for a TD </ListGroup.Item>\n              <ListGroup.Item>10 points for a safety</ListGroup.Item>\n              <ListGroup.Item>1 point for sack, int, fumble recovery </ListGroup.Item>\n              <ListGroup.Item>You can not score a special teams TD with the offense on the field</ListGroup.Item>\n            </ListGroup>\n          </Card.Body>\n        </Card>\n\n      </div>\n    );\n  }\n}\n//\n//   state:TeamPageProps;\n//\n//   constructor(state:TeamPageProps) {\n//     super(state);\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {PlayerPage} from \"./admin/PlayersPage\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  RouteComponentProps, Switch\n} from \"react-router-dom\";\nimport {Players} from \"./public/Players\";\nimport {TeamPage} from \"./admin/TeamPage\";\nimport {DraftPage} from \"./admin/DraftPage\";\nimport {ScoresPage} from \"./admin/Score/ScoresPage\";\nimport {GameView} from \"./admin/games/GameView\";\nimport {Rules} from \"./public/Rules\";\nconst App: React.FC = () => {\n  // window.name = process.env.REACT_APP_HOST==undefined?'not':process.env.REACT_APP_HOST;\n  // window.name = \"http://localhost:8080\"\n  window.name=''\n  return (\n      // <div className=\"App\">\n      //      <header className=\"App-header\">\n      //        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      //      </header>\n      //    </div>\n\n    <Router>\n      <div className=\"App\">\n        <ul className={\"nav nav-tabs\"} >\n          <li className=\"nav-item\">\n            <a className=\"nav-link \" href=\"/\">Teams and Scores</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/playerPage\">Player Page</a>\n          </li>\n\n          {/*<li className=\"nav-item\">*/}\n          {/*  <a className=\"nav-link\" href=\"/teamPage\">Team Page</a>*/}\n          {/*</li>*/}\n\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/draftPage\">Draft</a>\n          </li>\n\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/gamez\">Games and stats</a>\n          </li>\n\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/rules\">Rules</a>\n          </li>\n\n        </ul>\n\n\n        {/*<nav>*/}\n        {/*  /!*<Link to=\"/\">Home</Link>*!/*/}\n        {/*  <Link to=\"/foo\">Players</Link>*/}\n        {/*</nav>*/}\n        <Switch>\n          <Route exact path=\"/\" component={ScoresPage} />\n          <Route exact path=\"/playerPage\" component={PlayerPage} />\n          <Route exact path=\"/teamPage\" component={TeamPage} />\n          <Route exact path=\"/draftPage\" component={DraftPage} />\n          <Route exact path=\"/gamez\" component={GameView} />\n          <Route exact path=\"/rules\" component={Rules} />\n        </Switch>\n      </div>\n    </Router>\n\n  );\n\n  // return (\n  //   <Router>\n  //   <!--Each route is defined with Route-->\n  //   <Route path=\"/\" component={Home}/>\n  // </Router>)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render\n(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}