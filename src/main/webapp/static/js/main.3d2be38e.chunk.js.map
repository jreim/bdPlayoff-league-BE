{"version":3,"sources":["admin/Roster.tsx","admin/PlayersPage.tsx","admin/TeamPage.tsx","admin/DraftLine.tsx","admin/DraftPage.tsx","admin/Score/TeamRoster.tsx","admin/Score/ScoresPage.tsx","admin/games/PlayerStatEntry.tsx","admin/games/PlayerScoreRow.tsx","admin/games/GameView.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Roster","a","state","x","Array","map","value","players","player","position","push","this","setState","data","p","undefined","team2","team1","className","index","getClazz","name","React","PlayerPage","pro","nflTeams","getPlayers","bind","console","log","fetch","window","then","response","json","forceUpdate","isLoading","_","filter","conf","key","nflTeam","TeamPage","teamName","teamEmail","teams","handleChange","handleSubmit","randomDraft","deleteTeam","getNeeds","sortBy","loadTeams","e","preventDefault","method","body","JSON","stringify","headers","res","catch","err","alert","event","target","id","team","jawn","indexOf","splice","Table","size","indx","draftPos","email","onClick","Form","onSubmit","Row","Col","Control","type","onChange","Button","variant","startDraft","DraftLine","pickParam","pick","roundPick","playerName","editPick","DraftPage","picks","pickNumber","logo","eliminated","wcw","score","passYd","recYd","rushYd","tPt","rushTd","passRecTd","xp","fg","dst","elim","playoffRound","editTeam","orderBy","getPickNumber","length","found","i","playerId","status","selected","teamId","toString","labelKey","option","filterBy","options","placeholder","TeamRoster","params","Card","Body","lg","div","champ","sb","ScoresPage","Container","Accordion","Toggle","as","Header","eventKey","playersRemaining","Collapse","PlayerStatEntry","round","isUndefined","stat","rushTdStr","passRecTdStr","fgStr","hit","localStat","rtd","strToArray","ptd","fgt","strArr","split","intArr","parseInt","Component","PlayerScoreRow","filterd","striped","bordered","hover","GameView","games","game","order","homeTeam","awayTeam","App","href","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d2be38e.chunk.js","sourcesContent":["import * as React from \"react\";\nimport {Players} from \"../public/Players\";\nimport {Player} from \"../services/RosterService\";\nimport \"./Roster.css\"\ninterface ISome {\n  players: Array<Player>;\n}\nexport class Roster extends React.Component<ISome> {\n\n  readonly state: {x:Player[]};\n\n  constructor(a:ISome) {\n    super(a);\n    this.state = {x:Array<Player>()};\n    [\"QB\",\"RB\",\"WR\",\"TE\",\"K\",\"DST\"].map((value:string)=>{\n      a.players.map((player:Player)=>{\n        if(player.position === value){\n          this.state.x.push(player)\n        }\n      })\n    })\n\n  }\n\n  componentDidMount(): void {\n    this.setState({data:[]})\n  }\n\n  getClazz(p:Player ):string {\n    if(p.team2 != undefined){\n      return \"row text-left text-muted\"\n    }\n    else if(p.team1 != undefined){\n      return \"row text-left text-warning\"\n    }\n    return \"row text-left text-primary\";\n  }\n\n  render(){\n    return (\n      <div className=\"\">\n      {this.state.x.map((value:Player,index:number) => {\n          return (\n            <div className={this.getClazz(value)}>\n              <div className=\"col-2\">{value.position}</div>\n              <div className=\"col-8\">\n                {value.name}\n              </div>\n            </div>\n          )})}\n\n      </div>);\n  }\n}","import * as React from \"react\";\nimport './PlayerPage.css'\nimport {NflTeam} from \"../services/NflTeamService\";\nimport {Roster} from \"./Roster\";\nimport _ from \"lodash\";\nimport {Player} from \"../services/RosterService\";\nimport {Team} from \"../services/TeamService\";\n// import Timeout = NodeJS.Timeout;\n\nexport interface PlayerPageProps {\n  nflTeams: Array<NflTeam>;\n  players: Array<Player>;\n}\nexport class PlayerPage extends React.Component<PlayerPageProps> {\n\n  state:PlayerPageProps;\n  // timer:Timeout;\n  constructor(pro:PlayerPageProps) {\n    super(pro);\n    this.state = {nflTeams:[],players:[]};\n    this.getPlayers = this.getPlayers.bind(this)\n    // setInterval(()=> this.getPlayers(), 1000);\n  }\n  getPlayers(){\n    console.log(\"run\")\n    fetch(window.name +\"/player\")\n    .then(response => response.json())\n    // .then(data =>{\n    //   this.setState({ players: data, isLoading: true, nflTeams: this.state.nflTeams })\n    //   return fetch(window.name +\"/static/nflTeams\")\n    //   .then(response => response.json())\n    //   .then(data => this.setState({nflTeams: data, isLoading: false, players: this.state.players}));\n    // } )\n    .then(data =>{\n      console.log(data)\n      this.setState({...this.state,players:data, nflTeams:this.state.nflTeams});\n      this.forceUpdate();\n    } )\n  }\n  // service:IPlayerState = LoadNflTeams();\n  componentDidMount() {\n    this.setState({nflTeams: [], isLoading: true,players: []});\n    // this.state: IPlayerState{isLoading: true}\n    fetch(window.name +\"/player\")\n    .then(response => response.json())\n    .then(data =>{\n        this.setState({ players: data, isLoading: true, nflTeams: this.state.nflTeams })\n        return fetch(window.name +\"/static/nflTeams\")\n        .then(response => response.json())\n        .then(data => this.setState({nflTeams: data, isLoading: false, players: this.state.players}));\n    } )\n\n  }\n\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          {_.filter(this.state.nflTeams,\n            (data:NflTeam)=> {return data.conf === 'AFC'}).map(\n              (value:NflTeam, index:number) => {\n            return(\n              <div className=\"col\">\n                   <div className=\"row \">\n                     {/*<img src={logo}/>*/}\n                     {/*<img src=\"%PUBLIC_URL%/NE.png\"/>*/}\n                     {/*<img src={process.env.PUBLIC_URL + value.logo}/>*/}\n                     <h3 className=\"col-12\">{value.name}</h3>\n                   </div>\n              <div className=\"row\">\n                <Roster key={value.name} players={_.filter(this.state.players, (data: Readonly<Player>) =>{\n                  return data.nflTeam.name === value.name;\n                }) }/>\n              </div>\n              </div>)})}\n        </div>\n\n        <div className=\"row\">\n          {_.filter(this.state.nflTeams,(data:NflTeam)=> {return data.conf === 'NFC'}).map((value:NflTeam, index:number) => {\n            return(\n              <div className=\"col\">\n                <div className=\"row justify-content-center\">\n                  {/*<img src={logo}/>*/}\n                  {/*<img src=\"%PUBLIC_URL%/NE.png\"/>*/}\n                  {/*<img src={process.env.PUBLIC_URL + value.logo}/>*/}\n                  <h3>{value.name}</h3>\n                </div>\n                <div className=\"\">\n                  <Roster key={value.name} players={_.filter(this.state.players, (data: Readonly<Player>) =>{\n                    return data.nflTeam.name === value.name;\n                  }) }/>\n                </div>\n              </div>)})}\n        </div>\n      </div>\n    );\n\n  }\n}\n","import * as React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport './Team.css'\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport {Team} from \"../services/TeamService\";\nimport _ from \"lodash\";\nimport {FaTrashAlt} from 'react-icons/fa';\n\nexport interface TeamPageProps {\n  teamName: string;\n  teamEmail: string;\n  teams: Array<Team>;\n}\nexport class TeamPage extends React.Component<TeamPageProps> {\n\n  state:TeamPageProps;\n\n  constructor(state:TeamPageProps) {\n    super(state);\n    this.state = {teamName: \"\", teamEmail:\"\", teams:[]}\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.randomDraft = this.randomDraft.bind(this);\n    this.deleteTeam = this.deleteTeam.bind(this);\n    this.getNeeds = this.getNeeds.bind(this);\n  }\n\n  loadTeams(){\n    console.log(window.name +\"/team\")\n    fetch(window.name +\"/team\")\n    .then(response => response.json())\n    .then(data => {\n      this.setState({...this.state, teams: _.sortBy(data, 'draftPos')})\n    })\n  }\n  componentDidMount(): void {\n    this.loadTeams();\n  }\n\n  handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    console.log(this.state);\n    e.preventDefault();\n    fetch(window.name +'/team', {\n      method: 'POST',\n      body: JSON.stringify({\"name\": this.state.teamName, \"email\": this.state.teamEmail}),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response => response.json())\n    .then(res => {\n      this.state.teams.push(res);\n      this.setState({...this.state, teams: _.sortBy(this.state.teams, 'draftPos'),\n          teamName: \"\", teamEmail:\"\"})\n    }).catch(err => {\n      alert(err);\n    });\n  }\n\n  handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    if (event.target.id === 'name') {\n      this.setState({...this.state, teamName: event.target.value});\n    }\n    if (event.target.id === 'email') {\n      this.setState({...this.state, teamEmail: event.target.value});\n    }\n\n  }\n\n  randomDraft() {\n\n    fetch(window.name +\"/team/shuffle\")\n    .then(response => response.json())\n    .then(data => {\n      this.setState({...this.state, teams: _.sortBy(data, 'draftPos')})\n    })\n  };\n\n  deleteTeam(id:number){\n    fetch(window.name +\"/team/\"+id,{\n      method: \"DELETE\"})\n    .then(data => {\n      this.setState({...this.state, teams: _.sortBy(data, 'draftPos')})\n    })\n  }\n\n  startDraft(){\n    fetch(window.name +\"/draft/start\",{\n      method: \"GET\"})\n    .then(data => {\n      alert(\"Draft is started , no mo teams can be added.\")\n    })\n  }\n\n  getNeeds(team: Team):string{\n    var players:Array<string>;\n    players = [\"QB\",\"RB\",\"RB\",\"WR/TE\",\"WR/TE\",\"WR/TE\",\"K\",\"DST\"];\n    console.log(team.players)\n    if(team.players){\n      for(var p of team.players) {\n        var jawn:string = p.position;\n        if(jawn === \"TE\" || jawn ==\"WR\"){\n          jawn=\"WR/TE\";\n        }\n        if (players.indexOf(jawn) > -1) {\n          players.splice(players.indexOf(jawn), 1);\n        }\n      }\n    }\n    return JSON.stringify(players);\n  }\n\n  render() {\n    return (\n      <div className={\"row\"}>\n        <Table size={\"sm\"}>\n          <thead>\n          <tr>\n            <th>Draft Pos</th>\n            <th>Name</th>\n            <th>email</th>\n            <th>remaining</th>\n            <th>util</th>\n          </tr>\n          </thead>\n          <tbody>\n          {this.state.teams.map((value: Team, indx: number) => {\n            return (\n              <tr>\n                <td>{value.draftPos}</td>\n                <td>{value.name}</td>\n                <td>{value.email}</td>\n                <td>{this.getNeeds(value)}</td>\n                <td><FaTrashAlt onClick={()=>{this.deleteTeam(value.id)}}/></td>\n              </tr>\n            );\n          })\n          }\n          </tbody>\n        </Table>\n        <div className={\"row\"}>\n\n        </div>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Row>\n            <Col>\n              <Form.Control id=\"name\" type=\"text\" value={this.state.teamName} onChange={this.handleChange}/>\n            </Col>\n            <Col>\n              <Form.Control id=\"email\" type=\"text\" value={this.state.teamEmail} onChange={this.handleChange}/>\n\n            </Col>\n            <Col>\n              <Button variant=\"primary\" type=\"submit\">\n                Add Team\n              </Button>\n            </Col>\n\n            <Col>\n              <Button variant=\"primary\" onClick={this.randomDraft}>\n                shuffle draft\n              </Button>\n\n            </Col>\n\n            <Col>\n              <Button variant=\"primary\" onClick={this.startDraft}>\n                Start draft\n              </Button>\n\n            </Col>\n          </Form.Row>\n\n        </Form>\n      </div>\n\n    )\n  }\n}","import * as React from \"react\";\nimport {DraftPick} from \"../services/DraftService\";\nimport {FaTrashAlt, FaPencilAlt, FaPoop} from 'react-icons/fa';\nimport {Player} from \"../services/RosterService\";\nimport './DraftPage.css'\n\ninterface IState {\n  pick: DraftPick;\n  players: Array<Player>\n  pickNumber: number;\n  editPick: (num:number)=>void;\n  getNeeds: (num:string)=>void;\n\n}\nexport class DraftLine extends React.Component<IState> {\n\n  state:IState;\n  constructor(pickParam: IState) {\n\n    super(pickParam);\n    this.state = pickParam;\n  }\n\n  render() {\n    return (\n    <div className={\"row\"}>\n      <div className={\"col-1\"}>{this.state.pick.draftPos}</div>\n      <div className={\"col-1\"}>{this.state.pick.roundPick}</div>\n      <div className={\"col-4\"}>{this.state.pick.teamName}</div>\n      <div className={\"col-4\"}>\n        {this.state.pick.playerName}\n      </div>\n      <div className={\"col-1\"}>\n        <FaPencilAlt onClick={()=>{this.state.editPick(this.state.pick.draftPos)}}/>\n        {/*<FaPoop onClick={()=>{this.state.getNeeds(this.state.pick.teamId)}}/>*/}\n      </div>\n    </div>);\n\n  }\n}","import * as React from \"react\";\nimport _ from \"lodash\";\nimport {Typeahead} from 'react-bootstrap-typeahead';\nimport {Player} from \"../services/RosterService\";\nimport {Button, Col, Form} from \"react-bootstrap\";\nimport {DraftLine} from \"./DraftLine\";\nimport {DraftPick} from \"../services/DraftService\";\nimport {Team} from \"../services/TeamService\";\nimport './DraftPage.css';\n\ninterface IState {\n  players: Array<Player>;\n  teams: Array<Team>;\n  player: Player;\n  picks: Array<DraftPick>;\n  pickNumber: number;\n}\n\nexport class DraftPage extends React.Component<IState> {\n\n  state: IState;\n\n  constructor(state: IState) {\n    super(state);\n    this.state = {\n      players: [],\n      teams: [],\n      picks: [],\n      pickNumber: 1,\n      player: {\n        position: \"\",\n        id: 0,\n        name: \"\",\n        nflTeam: {name: \"\", conf: \"\", logo: \"\"},\n        team1: undefined,\n        team2: undefined,\n        eliminated:false,\n        wcw: {\n          id:0,\n          score:0,\n          passYd: 0,\n          recYd:0,\n          rushYd:0,\n          tPt:0,\n\n          rushTd:[],\n          passRecTd:[],\n\n          xp:0,\n          fg:[],\n          dst:0,\n          elim:false,\n          playoffRound: \"\"\n        }\n      },\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.editTeam = this.editTeam.bind(this);\n    this.getNeeds = this.getNeeds.bind(this);\n\n  }\n\n  loadTeams() {\n\n    fetch(window.name + \"/team\")\n    .then(response => response.json())\n    .then(data => {\n      this.setState({...this.state, teams: _.sortBy(data, 'draftPos')})\n      return fetch(window.name + \"/player\")\n      .then(response => response.json())\n      .then(data => {\n        this.setState({...this.state, players: data})\n        return fetch(window.name + \"/draft\")\n        .then(response => response.json())\n        .then(data => {\n          this.setState({\n            ...this.state,\n            picks: _.orderBy(data, ['draftPos']),\n            pickNumber: this.getPickNumber(_.orderBy(data, ['draftPos']))\n          })\n        })\n      })\n    })\n  }\n\n\n  getPickNumber(picks: Array<DraftPick>): number {\n    if (picks.length === 0) {\n      return 1;\n    }\n    var found: boolean = false;\n    var i: number = 0;\n    while (!found) {\n      if (i == picks.length) {\n        found = true;\n        i = 0;\n      }\n      if (picks[i].playerId == 0 || picks[i].playerId == undefined) {\n        found = true;\n      } else {\n        i = i + 1;\n      }\n      // found = true;\n    }\n    // return  _.filter(picks,(p:DraftPick)=>{return p.playerId == 0})[0].draftPos;\n    return i + 1;\n\n  }\n\n  componentDidMount(): void {\n    this.loadTeams();\n  }\n\n\n  handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    fetch(window.name + '/draft/pick/' + this.state.picks[this.state.pickNumber - 1].id\n      + \"?playerId=\" + this.state.player.id, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    }).then(res => {\n\n      if (res.status == 200) {\n        this.state.picks[this.state.pickNumber - 1].playerName = this.state.player.name;\n        this.state.picks[this.state.pickNumber - 1].playerId = this.state.player.id;\n        this.setState({...this.state, pickNumber: this.getPickNumber(this.state.picks)});\n        this.setState({...this.state, player: undefined});\n      } else {\n        alert(\"something\")\n      }\n      console.log(res);\n      // this.setState({...this.state,teams: this.state.teams.push(res)})\n    }).catch(err => {\n      console.log(err)\n    });\n\n\n    e.preventDefault();\n  }\n\n  handleChange(selected: Player[]) {\n    this.setState({...this.state, player: selected[0]})\n  }\n\n  editTeam(draftPos: number) {\n    this.setState({...this.state, pickNumber: draftPos});\n  }\n\n  getNeeds(teamId: string) {\n\n    this.state.teams.map((team: Team) => {\n      if (team.id.toString() == teamId) {\n        var players: Array<string>;\n        players = [\"QB\", \"RB\", \"RB\", \"WR/TE\", \"WR/TE\", \"WR/TE\", \"K\", \"DST\"];\n        if (team.players) {\n\n          for (var p of team.players) {\n            var jawn: string = p.position;\n            if (jawn === \"TE\" || jawn == \"WR\") {\n              jawn = \"WR/TE\";\n            }\n            if (players.indexOf(jawn) > -1) {\n              players.splice(players.indexOf(jawn), 1);\n            }\n          }\n        }\n        alert(players);\n      }\n    })\n\n  }\n\n  render() {\n    return (\n      <div>\n        <div className={\"row tableFixHead\"}>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Row>\n              {/*<Col>Pick {this.state.pickNumber} for team {this.state.picks[this.state.pickNumber-1]} </Col>*/}\n              <Col>\n                <Typeahead\n                  id={\"playersTypeAhead\"}\n                  labelKey={(option: Player) => option.name + '-' + option.position}\n                  // labelKey={'name'}\n                  filterBy={['name']}\n                  // multiple={multiple}\n                  options={this.state.players}\n                  // labelKey={o => {o.name} }\n                  placeholder=\"Player\"\n                  // selected={this.state.selected}\n                  onChange={this.handleChange}\n                />\n              </Col>\n              {/*<Col>*/}\n              {/*    <Form.Control id=\"email\" type=\"text\" value={this.state.newTeam.email} onChange={this.handleChange}/>*/}\n\n              {/*</Col>*/}\n              <Col>\n                <Button variant=\"primary\" type=\"submit\">\n                  Draft Player\n                </Button>\n              </Col>\n            </Form.Row>\n\n          </Form>\n        </div>\n        <div className={\"row\"}>\n          <div className={\"col-1\"}>pick#</div>\n          <div className={\"col-1\"}>round.Pick</div>\n          <div className={\"col-4\"}>Team</div>\n          <div className={\"col-4\"}>Player</div>\n          <div className={\"col-2\"}>Utils</div>\n        </div>\n        {this.state.picks.map((pickParam: DraftPick, indx: number) => {\n          return (\n            <div className={this.state.pickNumber === pickParam.draftPos ? \"pick\" : \"\"}>\n              <DraftLine key={this.state.pickNumber}\n                          pick={pickParam}\n                         players={this.state.players}\n                         pickNumber={this.state.pickNumber}\n                         editPick={this.editTeam}\n                         getNeeds={this.getNeeds}/>\n            </div>)\n        })}\n\n      </div>\n    );\n  }\n}","import * as React from \"react\";\nimport {Player} from \"../../services/RosterService\";\nimport {Card, Col, Row} from \"react-bootstrap\";\nimport './TeamRoster.css'\nexport interface TeamRosterState {\n  players: Array<Player>;\n}\nexport class TeamRoster extends React.Component<TeamRosterState> {\n\n  state:TeamRosterState;\n\n  constructor(params: TeamRosterState) {\n    super(params);\n    var players: Array<string>;\n    players = [\"QB\", \"RB\", \"RB\", \"WR/TE\", \"WR/TE\", \"WR/TE\", \"K\", \"DST\"];\n    var orderedPlayers:Array<Player>;\n    this.state = {players:[]};\n    var positions: Array<string>;\n    positions = [\"QB\", \"RB\", \"WR\", \"TE\", \"K\", \"DST\"];\n    positions.map((position:string)=>{\n      params.players.map((player)=>{\n        if(player.position === position){\n          this.setState({...this.state, players:this.state.players.push(player)})\n        }\n      })\n    });\n\n  }\n\n  render(){\n\n  return(\n    <Card.Body className={\"teamHeader\"}>\n      <Row>\n\n        <Col lg={\"1\"} >\n          Pos.\n        </Col>\n      <Col lg={\"2\"} >\n        Player\n      </Col>\n\n        <Col lg={\"1\"} >\n          Wild card\n        </Col>\n\n        <Col lg={\"1\"} >\n          Divisonal\n        </Col>\n\n        <Col lg={\"2\"} >\n          Championship\n        </Col>\n\n        <Col lg={\"2\"} >\n          Super bowl\n        </Col>\n        <Col lg={\"1\"} >\n          Total\n        </Col>\n\n\n        </Row>\n      {this.state.players.map((player:Player) => {\n\n        return(<Row className={(player.eliminated ? \"eliminated\":\"\")}>\n\n          <Col lg={\"1\"} >\n            {player.position}\n          </Col>\n\n          <Col lg={\"2\"} >\n          {player.name}\n          </Col>\n\n          <Col lg={\"1\"} >\n            {player.wcw == undefined ? \"x\": player.wcw.score }\n          </Col>\n\n          <Col lg={\"1\"} >\n            {player.div == undefined ? \"x\": player.div.score }\n          </Col>\n\n          <Col lg={\"2\"} >\n            {player.champ == undefined ? \"x\": player.champ.score }\n          </Col>\n\n          <Col lg={\"2\"} >\n            {player.sb == undefined ? \"x\": player.sb.score }\n          </Col>\n          <Col lg={\"1\"} >\n            {(player.wcw == undefined ? 0:  player.wcw.score) +\n            (player.div == undefined ? 0: player.div.score )}\n          </Col>\n          </Row>)\n      })}\n    </Card.Body>\n\n  );\n  }\n}","import * as React from \"react\";\nimport './ScoresPage.css'\nimport Col from \"react-bootstrap/Col\";\nimport _ from \"lodash\";\n\nimport {Accordion, Card, Container, Row} from \"react-bootstrap\";\nimport {Team} from \"../../services/TeamService\";\nimport {TeamRoster} from \"./TeamRoster\";\n\nexport interface ScorePageState {\n  teams: Array<Team>;\n}\nexport class ScoresPage extends React.Component{\n\n  state:ScorePageState;\n\n  constructor() {\n    super({});\n    this.state = {teams:[]};\n  }\n\n  loadTeams(){\n    fetch(window.name +\"/team/scoreView\")\n    // fetch(\"http://20200103t024800-dot-bdsplayoffleague.appspot.com/team/scoreView\")\n    .then(response => response.json())\n    .then(data => {\n      this.setState({...this.state, teams: _.orderBy(data, 'score','desc')})\n    })\n  }\n  componentDidMount(): void {\n    this.loadTeams();\n  }\n\n\n\n  render() {\n    return (\n      <Container>\n        <Accordion >\n          <Card>\n            <Row className={\"header\"}>\n              <Col lg={4}>Team Name</Col>\n              <Col lg={2}>Players remaining</Col>\n              <Col lg={2}>Score</Col>\n              <Col lg={2}>Details</Col>\n            </Row>\n          </Card>\n          {this.state.teams.map((team:Team)=>{\n            return (<Card>\n              <Accordion.Toggle as={Card.Header} eventKey={team.name}>\n                <Row>\n                <Col lg={4}>{team.name}</Col>\n                <Col lg={2}>{team.playersRemaining}</Col>\n                <Col lg={2}>{team.score}</Col>\n                </Row>\n              </Accordion.Toggle>\n              <Accordion.Collapse  eventKey={team.name}>\n                {/*<Card.Body>*/}\n                  <TeamRoster\n                    key={team.id}\n                    players={team.players}/>\n                {/*</Card.Body>*/}\n\n              </Accordion.Collapse>\n            </Card>);\n          })}\n        </Accordion>\n\n      </Container>\n\n    )\n  }\n}","import {Player} from \"../../services/RosterService\";\nimport {GameStats} from \"../../services/GameService\";\nimport React from \"react\";\nimport {Button} from \"react-bootstrap\";\nimport _ from \"lodash\";\n\nexport interface IPlayerStatEntry {\n  player: Player;\n  stat?: GameStats;\n  round: string;\n}\n\nexport class PlayerStatEntry extends React.Component<IPlayerStatEntry> {\n\n  readonly state: IPlayerStatEntry;\n\n  constructor(params: IPlayerStatEntry) {\n    super(params);\n\n    console.log((params.round === \"wildCard\" && !_.isUndefined(params.player.wcw) + \" \" + params.round + \" \" + params.player.wcw));\n\n    if (params.round === \"wildCard\" && !_.isUndefined(params.player.wcw)) {\n      params.player.wcw.rushTdStr = params.player.wcw.rushTd.toString();\n      params.player.wcw.passRecTdStr = params.player.wcw.passRecTd.toString();\n      params.player.wcw.fgStr = params.player.wcw.fg.toString();\n      this.state = {\n        player: params.player, round: params.round, stat: params.player.wcw\n      };\n      this.forceUpdate();\n    }\n    else if (params.round === \"divisional\" && !_.isUndefined(params.player.div)){\n      params.player.div.rushTdStr = params.player.div.rushTd.toString();\n      params.player.div.passRecTdStr = params.player.div.passRecTd.toString();\n      params.player.div.fgStr = params.player.div.fg.toString();\n      this.state = {\n        player: params.player, round: params.round, stat: params.player.div\n      };\n      this.forceUpdate();\n    }\n    else {\n      this.state = {\n        player: params.player, round: params.round, stat: {\n          id: 0,\n          score: 0,\n          passYd: 0,\n          recYd: 0,\n          rushYd: 0,\n          tPt: 0,\n          rushTd: [],\n          rushTdStr: \"\",\n          passRecTd: [],\n          passRecTdStr: \"\",\n          xp: 0,\n          fg: [],\n          fgStr: \"\",\n          dst: 0,\n          elim: false,\n          playoffRound: params.round,\n        }\n      }\n    }\n    ;\n    this.hit = this.hit.bind(this);\n  }\n\n  hit() {\n\n    var localStat: GameStats | undefined;\n    if (this.state.stat !== undefined) {\n      var rtd = this.strToArray(this.state.stat.rushTdStr)\n      var ptd = this.strToArray(this.state.stat.passRecTdStr)\n      var fgt = this.strToArray(this.state.stat.fgStr)\n      localStat = {\n        id: this.state.stat.id!,\n        score: this.state.stat.score!,\n        passYd: this.state.stat.passYd!,\n        recYd: this.state.stat.recYd!,\n        rushYd: this.state.stat.rushYd!,\n        tPt: this.state.stat.tPt,\n        playoffRound: this.state.round,\n        rushTd: rtd,\n        passRecTd: ptd,\n        xp: this.state.stat.xp,\n        fg: fgt,\n        fgStr: \"\",\n        dst: this.state.stat.dst,\n        elim: this.state.stat.elim\n      };\n\n      console.log(JSON.stringify(localStat));\n\n      fetch(window.name + '/stat/player/' + this.state.player.id, {\n        method: 'POST',\n        body: JSON.stringify(localStat),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(response => response.json())\n      .then(res => {\n        alert(\"saved\");\n      }).catch(err => {\n        alert(err);\n      });\n    }\n    // console.log(JSON.stringify(this.state.stat));\n  }\n\n  strToArray(data: string | undefined): Array<number> {\n    if (data !== undefined) {\n      if (data === \"\") {\n        return [];\n      }\n      var strArr = data.split(',');\n      var intArr = [];\n      var i = 0;\n      while (i < strArr.length) {\n        intArr.push(parseInt(strArr[i]));\n        i++;\n      }\n      return intArr;\n    }\n    return [];\n\n  }\n\n  render() {\n    return (\n      <tr>\n        <td className={\"nameClass\"}>{this.state.player.position}</td>\n        <td className={\"nameClass\"}>{this.state.player.name}</td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".passYd\"}\n            value={this.state.stat?.passYd}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, passYd: parseInt(data.target.value)}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".recYd\"}\n            value={this.state.stat?.recYd}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, recYd: parseInt(data.target.value)}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".rushYd\"}\n            value={this.state.stat?.rushYd}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, rushYd: parseInt(data.target.value)}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".tPt\"}\n            value={this.state.stat?.tPt}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, tPt: parseInt(data.target.value)}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".rushTd\"}\n            value={this.state.stat?.rushTdStr}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, rushTdStr: data.target.value}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".passRecTdStr\"}\n            value={this.state.stat?.passRecTdStr}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, passRecTdStr: data.target.value}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".fgStr\"}\n            value={this.state.stat?.fgStr}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, fgStr: data.target.value}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".xp\"}\n            value={this.state.stat?.xp}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, xp: parseInt(data.target.value)}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"text\" id={this.state.player.id + \".dst\"}\n            value={this.state.stat?.dst}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, dst: parseInt(data.target.value)}})\n            }}/>\n        </td>\n        <td>\n          <input\n            type=\"checkbox\" id={this.state.player.id + \".eliminated\"}\n            onChange={(data) => {\n              this.setState({...this.state, stat: {...this.state.stat, elim: !this.state.stat?.elim}})\n            }}/>\n        </td>\n        <td><Button onClick={() => {\n          this.hit();\n\n        }}>score</Button></td>\n\n\n      </tr>\n    )\n  }\n}","import React from \"react\";\nimport {NflTeam} from \"../../services/NflTeamService\";\nimport {Player} from \"../../services/RosterService\";\nimport {Button, Card, Col, Form, Row, Table, ToggleButton} from \"react-bootstrap\";\nimport './gameview.css'\nimport _ from \"lodash\";\nimport {PlayerStatEntry} from \"./PlayerStatEntry\";\n\ninterface IPlayerScoreRow {\n  team: NflTeam\n  players: Array<Player>;\n  round:string;\n}\n\nexport class PlayerScoreRow extends React.Component<IPlayerScoreRow> {\n\n  state: IPlayerScoreRow;\n\n  constructor(pickParam: IPlayerScoreRow) {\n    super(pickParam);\n    this.state = {team: pickParam.team, players: [], round: pickParam.round};\n    this.hit = this.hit.bind(this);\n  }\n\n  componentDidMount(): void {\n    fetch(window.name + \"/player/scoreView/byTeam?team=\"+this.state.team.name)\n    .then(response => response.json())\n    .then(data => {\n      var filterd = _.filter(data, (p: Player) => {\n        return (p.nflTeam.name === this.state.team.name && (!_.isUndefined(p.team1) ))\n      });\n      this.setState({\n        ...this.state, players: filterd\n      });\n    });\n\n  }\n\n\n  hit(e: React.ChangeEvent<HTMLInputElement>) {\n    this.state.players.map((player: Player) => {\n      if (e.target.id === player.id + \".passYd\") {\n        player.wcw.passYd = parseInt(e.target.value);\n      }\n    })\n    // console.log(e.target.id);\n  }\n\n\n  render() {\n    return (\n      <Card.Body className={\"teamHeader\"}>\n\n        <Row>\n          <Col lg={\"12\"}>\n            <Table striped bordered hover variant=\"dark\" size={\"small\"}>\n              <thead>\n              <tr>\n                <th className={\"nameClass\"}>Pos</th>\n                <th className={\"nameClass\"}>Player</th>\n                <th>passYd</th>\n                <th>recYd</th>\n                <th>rushYd</th>\n                <th>tPt</th>\n                <th>rushTd</th>\n                <th>passRecTd</th>\n                <th>fg</th>\n                <th>xp</th>\n                <th>dst</th>\n                <th>eliminated</th>\n                <th>go</th>\n              </tr>\n              </thead>\n              <tbody>\n              {this.state.players.map((player: Player) => {\n                return (\n                  <PlayerStatEntry key={player.id} player={player} round={this.state.round}/>\n                )\n              })}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n\n      </Card.Body>\n    );\n  }\n}","import * as React from \"react\";\nimport {FaTrashAlt, FaPencilAlt, FaPoop} from 'react-icons/fa';\nimport {Accordion, Card, Container, Row} from \"react-bootstrap\";\nimport _ from \"lodash\";\nimport {Game} from \"../../services/GameService\";\nimport Col from \"react-bootstrap/Col\";\nimport {Team} from \"../../services/TeamService\";\nimport {TeamRoster} from \"../Score/TeamRoster\";\nimport {PlayerScoreRow} from \"./PlayerScoreRow\";\n\ninterface IGameState {\n\n  games:Array<Game>;\n\n}\nexport class GameView extends React.Component<IGameState> {\n\n  state:IGameState;\n  constructor(pickParam: IGameState) {\n    super(pickParam);\n    this.state = {games:[]};\n  }\n  componentDidMount(): void {\n\n    console.log(\"componentDidMount\")\n    this.loadTeams();\n  }\n\n  loadTeams() {\n\n    console.log(\"loadTeams\")\n    fetch(window.name + \"/game\")\n    .then(response => response.json())\n    .then(data => {\n      console.log(data)\n      this.setState({...this.state, games: _.sortBy(data, 'order')})\n    })\n  }\n\n  render() {\n    return (\n      <Container>\n        <Accordion >\n          {this.state.games.map((game:Game)=>{\n            return (<Card>\n              <Accordion.Toggle as={Card.Header} eventKey={game.order.toString()}>\n                <Row>\n                  <Col lg={4}>{game.homeTeam.name} vs {game.awayTeam.name}</Col>\n                </Row>\n              </Accordion.Toggle>\n              <Accordion.Collapse  eventKey={game.order.toString()}>\n                <Card.Body>\n                  {game.homeTeam.name}\n                  <PlayerScoreRow key={game.homeTeam.name}\n                  team={game.homeTeam}\n                  players={[]}\n                  round={game.round}\n                  />\n                  {game.awayTeam.name}\n                  <PlayerScoreRow key={game.awayTeam.name}\n                                  team={game.awayTeam}\n                                  players={[]}\n                                  round={game.round}\n                  />\n                </Card.Body>\n\n              </Accordion.Collapse>\n            </Card>);\n          })}\n        </Accordion>\n      </Container>\n      );\n\n  }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {PlayerPage} from \"./admin/PlayersPage\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  RouteComponentProps, Switch\n} from \"react-router-dom\";\nimport {Players} from \"./public/Players\";\nimport {TeamPage} from \"./admin/TeamPage\";\nimport {DraftPage} from \"./admin/DraftPage\";\nimport {ScoresPage} from \"./admin/Score/ScoresPage\";\nimport {GameView} from \"./admin/games/GameView\";\nconst App: React.FC = () => {\n  // window.name = process.env.REACT_APP_HOST==undefined?'not':process.env.REACT_APP_HOST;\n  // window.name = \"http://localhost:8080\"\n  window.name=''\n  return (\n      // <div className=\"App\">\n      //      <header className=\"App-header\">\n      //        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      //      </header>\n      //    </div>\n\n    <Router>\n      <div className=\"App\">\n        <ul className=\"nav nav-tabs\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link \" href=\"/\">Scores</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/playerPage\">Player Page</a>\n          </li>\n\n          {/*<li className=\"nav-item\">*/}\n          {/*  <a className=\"nav-link\" href=\"/teamPage\">Team Page</a>*/}\n          {/*</li>*/}\n\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/draftPage\">Draft</a>\n          </li>\n\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/gamez\">Games and stats</a>\n          </li>\n        </ul>\n\n\n        {/*<nav>*/}\n        {/*  /!*<Link to=\"/\">Home</Link>*!/*/}\n        {/*  <Link to=\"/foo\">Players</Link>*/}\n        {/*</nav>*/}\n        <Switch>\n          <Route exact path=\"/\" component={ScoresPage} />\n          <Route exact path=\"/playerPage\" component={PlayerPage} />\n          <Route exact path=\"/teamPage\" component={TeamPage} />\n          <Route exact path=\"/draftPage\" component={DraftPage} />\n          <Route exact path=\"/gamez\" component={GameView} />\n        </Switch>\n      </div>\n    </Router>\n\n  );\n\n  // return (\n  //   <Router>\n  //   <!--Each route is defined with Route-->\n  //   <Route path=\"/\" component={Home}/>\n  // </Router>)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render\n(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}