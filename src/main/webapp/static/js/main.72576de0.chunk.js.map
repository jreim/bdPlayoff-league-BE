{"version":3,"sources":["admin/Roster.tsx","admin/PlayersPage.tsx","public/Players.tsx","admin/TeamPage.tsx","admin/DraftLine.tsx","admin/DraftPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Roster","a","state","x","Array","map","value","players","player","position","push","this","setState","data","p","undefined","team2","team1","className","index","getClazz","name","React","PlayerPage","pro","nflTeams","getPlayers","bind","console","log","fetch","window","then","response","json","forceUpdate","isLoading","_","filter","conf","key","nflTeam","Players","TeamPage","teamName","teamEmail","teams","handleChange","handleSubmit","randomDraft","deleteTeam","getNeeds","sortBy","loadTeams","e","preventDefault","method","body","JSON","stringify","headers","res","catch","err","alert","event","target","id","team","jawn","indexOf","splice","Table","size","indx","draftPos","email","onClick","Form","onSubmit","Row","Col","Control","type","onChange","Button","variant","startDraft","DraftLine","pickParam","pick","roundPick","playerName","editPick","teamId","DraftPage","picks","pickNumber","logo","editTeam","orderBy","getPickNumber","length","found","i","playerId","status","selected","toString","labelKey","option","filterBy","options","placeholder","App","process","href","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.72576de0.chunk.js","sourcesContent":["import * as React from \"react\";\nimport {Players} from \"../public/Players\";\nimport {Player} from \"../services/RosterService\";\nimport \"./Roster.css\"\ninterface ISome {\n  players: Array<Player>;\n}\nexport class Roster extends React.Component<ISome> {\n\n  readonly state: {x:Player[]};\n\n  constructor(a:ISome) {\n    super(a);\n    this.state = {x:Array<Player>()};\n    [\"QB\",\"RB\",\"WR\",\"TE\",\"K\",\"DST\"].map((value:string)=>{\n      a.players.map((player:Player)=>{\n        if(player.position === value){\n          this.state.x.push(player)\n        }\n      })\n    })\n\n  }\n\n  componentDidMount(): void {\n    this.setState({data:[]})\n  }\n\n  getClazz(p:Player ):string {\n    if(p.team2 != undefined){\n      return \"row text-left text-muted\"\n    }\n    else if(p.team1 != undefined){\n      return \"row text-left text-warning\"\n    }\n    return \"row text-left text-primary\";\n  }\n\n  render(){\n    return (\n      <div className=\"\">\n      {this.state.x.map((value:Player,index:number) => {\n          return (\n            <div className={this.getClazz(value)}>\n              <div className=\"col-2\">{value.position}</div>\n              <div className=\"col-8\">\n                {value.name}\n              </div>\n            </div>\n          )})}\n\n      </div>);\n  }\n}","import * as React from \"react\";\nimport './PlayerPage.css'\nimport {NflTeam} from \"../services/NflTeamService\";\nimport {Roster} from \"./Roster\";\nimport _ from \"lodash\";\nimport {Player} from \"../services/RosterService\";\nimport {Team} from \"../services/TeamService\";\n// import Timeout = NodeJS.Timeout;\n\nexport interface PlayerPageProps {\n  nflTeams: Array<NflTeam>;\n  players: Array<Player>;\n}\nexport class PlayerPage extends React.Component<PlayerPageProps> {\n\n  state:PlayerPageProps;\n  // timer:Timeout;\n  constructor(pro:PlayerPageProps) {\n    super(pro);\n    this.state = {nflTeams:[],players:[]};\n    this.getPlayers = this.getPlayers.bind(this)\n    // setInterval(()=> this.getPlayers(), 1000);\n  }\n  getPlayers(){\n    console.log(\"run\")\n    fetch(window.name +\"/player\")\n    .then(response => response.json())\n    // .then(data =>{\n    //   this.setState({ players: data, isLoading: true, nflTeams: this.state.nflTeams })\n    //   return fetch(window.name +\"/static/nflTeams\")\n    //   .then(response => response.json())\n    //   .then(data => this.setState({nflTeams: data, isLoading: false, players: this.state.players}));\n    // } )\n    .then(data =>{\n      console.log(data)\n      this.setState({...this.state,players:data, nflTeams:this.state.nflTeams});\n      this.forceUpdate();\n    } )\n  }\n  // service:IPlayerState = LoadNflTeams();\n  componentDidMount() {\n    this.setState({nflTeams: [], isLoading: true,players: []});\n    // this.state: IPlayerState{isLoading: true}\n    fetch(window.name +\"/player\")\n    .then(response => response.json())\n    .then(data =>{\n        this.setState({ players: data, isLoading: true, nflTeams: this.state.nflTeams })\n        return fetch(window.name +\"/static/nflTeams\")\n        .then(response => response.json())\n        .then(data => this.setState({nflTeams: data, isLoading: false, players: this.state.players}));\n    } )\n\n  }\n\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          {_.filter(this.state.nflTeams,\n            (data:NflTeam)=> {return data.conf === 'AFC'}).map(\n              (value:NflTeam, index:number) => {\n            return(\n              <div className=\"col\">\n                   <div className=\"row \">\n                     {/*<img src={logo}/>*/}\n                     {/*<img src=\"%PUBLIC_URL%/NE.png\"/>*/}\n                     {/*<img src={process.env.PUBLIC_URL + value.logo}/>*/}\n                     <h3 className=\"col-12\">{value.name}</h3>\n                   </div>\n              <div className=\"row\">\n                <Roster key={value.name} players={_.filter(this.state.players, (data: Readonly<Player>) =>{\n                  return data.nflTeam.name === value.name;\n                }) }/>\n              </div>\n              </div>)})}\n        </div>\n\n        <div className=\"row\">\n          {_.filter(this.state.nflTeams,(data:NflTeam)=> {return data.conf === 'NFC'}).map((value:NflTeam, index:number) => {\n            return(\n              <div className=\"col\">\n                <div className=\"row justify-content-center\">\n                  {/*<img src={logo}/>*/}\n                  {/*<img src=\"%PUBLIC_URL%/NE.png\"/>*/}\n                  {/*<img src={process.env.PUBLIC_URL + value.logo}/>*/}\n                  <h3>{value.name}</h3>\n                </div>\n                <div className=\"\">\n                  <Roster key={value.name} players={_.filter(this.state.players, (data: Readonly<Player>) =>{\n                    return data.nflTeam.name === value.name;\n                  }) }/>\n                </div>\n              </div>)})}\n        </div>\n      </div>\n    );\n\n  }\n}\n","import * as React from \"react\";\n\nexport class Players extends React.Component {\n\n  componentDidMount() {\n    // this.setState({ isLoading: true });\n    // fetch(\"http://localhost:8080/player\")\n    // // .then(response => console.log(response.json()))\n    // .then(data => data.json().then(x => console.log(x)));\n    // // .then(data => this.setState({ data: data, isLoading: false }));\n  }\n\n  render () {\n    return (<div>Players</div>);\n  }\n\n}","import * as React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport './Team.css'\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\nimport {Team} from \"../services/TeamService\";\nimport _ from \"lodash\";\nimport {FaTrashAlt} from 'react-icons/fa';\n\nexport interface TeamPageProps {\n  teamName: string;\n  teamEmail: string;\n  teams: Array<Team>;\n}\nexport class TeamPage extends React.Component<TeamPageProps> {\n\n  state:TeamPageProps;\n\n  constructor(state:TeamPageProps) {\n    super(state);\n    this.state = {teamName: \"\", teamEmail:\"\", teams:[]}\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.randomDraft = this.randomDraft.bind(this);\n    this.deleteTeam = this.deleteTeam.bind(this);\n    this.getNeeds = this.getNeeds.bind(this);\n  }\n\n  loadTeams(){\n    fetch(window.name +\"/team\")\n    .then(response => response.json())\n    .then(data => {\n      this.setState({...this.state, teams: _.sortBy(data, 'draftPos')})\n    })\n  }\n  componentDidMount(): void {\n    this.loadTeams();\n  }\n\n  handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    console.log(this.state);\n    e.preventDefault();\n    fetch(window.name +'/team', {\n      method: 'POST',\n      body: JSON.stringify({\"name\": this.state.teamName, \"email\": this.state.teamEmail}),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response => response.json())\n    .then(res => {\n      this.state.teams.push(res);\n      this.setState({...this.state, teams: _.sortBy(this.state.teams, 'draftPos'),\n          teamName: \"\", teamEmail:\"\"})\n    }).catch(err => {\n      alert(err);\n    });\n  }\n\n  handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    if (event.target.id === 'name') {\n      this.setState({...this.state, teamName: event.target.value});\n    }\n    if (event.target.id === 'email') {\n      this.setState({...this.state, teamEmail: event.target.value});\n    }\n\n  }\n\n  randomDraft() {\n\n    fetch(window.name +\"/team/shuffle\")\n    .then(response => response.json())\n    .then(data => {\n      this.setState({...this.state, teams: _.sortBy(data, 'draftPos')})\n    })\n  };\n\n  deleteTeam(id:number){\n    fetch(window.name +\"/team/\"+id,{\n      method: \"DELETE\"})\n    .then(data => {\n      this.setState({...this.state, teams: _.sortBy(data, 'draftPos')})\n    })\n  }\n\n  startDraft(){\n    fetch(window.name +\"/draft/start\",{\n      method: \"GET\"})\n    .then(data => {\n      alert(\"Draft is started , no mo teams can be added.\")\n    })\n  }\n\n  getNeeds(team: Team):string{\n    var players:Array<string>;\n    players = [\"QB\",\"RB\",\"RB\",\"WR/TE\",\"WR/TE\",\"WR/TE\",\"K\",\"DST\"];\n    console.log(team.players)\n    if(team.players){\n      for(var p of team.players) {\n        var jawn:string = p.position;\n        if(jawn === \"TE\" || jawn ==\"WR\"){\n          jawn=\"WR/TE\";\n        }\n        if (players.indexOf(jawn) > -1) {\n          players.splice(players.indexOf(jawn), 1);\n        }\n      }\n    }\n    return JSON.stringify(players);\n  }\n\n  render() {\n    return (\n      <div className={\"row\"}>\n        <Table size={\"sm\"}>\n          <thead>\n          <tr>\n            <th>Draft Pos</th>\n            <th>Name</th>\n            <th>email</th>\n            <th>remaining</th>\n            <th>util</th>\n          </tr>\n          </thead>\n          <tbody>\n          {this.state.teams.map((value: Team, indx: number) => {\n            return (\n              <tr>\n                <td>{value.draftPos}</td>\n                <td>{value.name}</td>\n                <td>{value.email}</td>\n                <td>{this.getNeeds(value)}</td>\n                <td><FaTrashAlt onClick={()=>{this.deleteTeam(value.id)}}/></td>\n              </tr>\n            );\n          })\n          }\n          </tbody>\n        </Table>\n        <div className={\"row\"}>\n\n        </div>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Row>\n            <Col>\n              <Form.Control id=\"name\" type=\"text\" value={this.state.teamName} onChange={this.handleChange}/>\n            </Col>\n            <Col>\n              <Form.Control id=\"email\" type=\"text\" value={this.state.teamEmail} onChange={this.handleChange}/>\n\n            </Col>\n            <Col>\n              <Button variant=\"primary\" type=\"submit\">\n                Add Team\n              </Button>\n            </Col>\n\n            <Col>\n              <Button variant=\"primary\" onClick={this.randomDraft}>\n                shuffle draft\n              </Button>\n\n            </Col>\n\n            <Col>\n              <Button variant=\"primary\" onClick={this.startDraft}>\n                Start draft\n              </Button>\n\n            </Col>\n          </Form.Row>\n\n        </Form>\n      </div>\n\n    )\n  }\n}","import * as React from \"react\";\nimport {DraftPick} from \"../services/DraftService\";\nimport {FaTrashAlt, FaPencilAlt, FaPoop} from 'react-icons/fa';\nimport {Player} from \"../services/RosterService\";\nimport './DraftPage.css'\n\ninterface IState {\n  pick: DraftPick;\n  players: Array<Player>\n  pickNumber: number;\n  editPick: (num:number)=>void;\n  getNeeds: (num:string)=>void;\n\n}\nexport class DraftLine extends React.Component<IState> {\n\n  state:IState;\n  constructor(pickParam: IState) {\n    super(pickParam);\n    this.state = pickParam;\n  }\n\n\n\n\n\n  render() {\n    return (\n    <div className={\"row\"}>\n      <div className={\"col-1\"}>{this.state.pick.draftPos}</div>\n      <div className={\"col-1\"}>{this.state.pick.roundPick}</div>\n      <div className={\"col-4\"}>{this.state.pick.teamName}</div>\n      <div className={\"col-4\"}>\n        {this.state.pick.playerName}\n      </div>\n      <div className={\"col-1\"}>\n        <FaPencilAlt onClick={()=>{this.state.editPick(this.state.pick.draftPos)}}/>\n        <FaPoop onClick={()=>{this.state.getNeeds(this.state.pick.teamId)}}/>\n      </div>\n    </div>);\n\n  }\n}","import * as React from \"react\";\nimport _ from \"lodash\";\nimport {Typeahead} from 'react-bootstrap-typeahead';\nimport {Player} from \"../services/RosterService\";\nimport {Button, Col, Form} from \"react-bootstrap\";\nimport {DraftLine} from \"./DraftLine\";\nimport {DraftPick} from \"../services/DraftService\";\nimport {Team} from \"../services/TeamService\";\nimport './DraftPage.css';\n\ninterface IState {\n  players: Array<Player>;\n  teams: Array<Team>;\n  player: Player;\n  picks: Array<DraftPick>;\n  pickNumber: number;\n}\n\nexport class DraftPage extends React.Component<IState> {\n\n  state:IState;\n\n  constructor(state: IState) {\n    super(state);\n    this.state = {players: [], teams: [], picks: [], pickNumber: 1,player: {position:\"\",id:0,name:\"\",nflTeam:{name:\"\",conf:\"\",logo:\"\"},team1:undefined,team2:undefined}};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.editTeam = this.editTeam.bind(this);\n    this.getNeeds = this.getNeeds.bind(this);\n\n  }\n\n  loadTeams() {\n    fetch(window.name+\"/team\")\n    .then(response => response.json())\n    .then(data => {\n      this.setState({...this.state, teams: _.sortBy(data, 'draftPos')})\n      return fetch(window.name +\"/player\")\n      .then(response => response.json())\n      .then(data => {\n        this.setState({...this.state, players: data})\n        return fetch(window.name +\"/draft\")\n        .then(response => response.json())\n        .then(data => {\n          this.setState({...this.state, picks: _.orderBy(data, ['draftPos']), pickNumber:this.getPickNumber(_.orderBy(data, ['draftPos'])) })\n        })\n      })\n    })\n  }\n\n\n  getPickNumber(picks:Array<DraftPick> ):number{\n    if(picks.length === 0){\n      return 1;\n    }\n    var found:boolean = false;\n    var i:number = 0;\n    while(!found){\n      if(i == picks.length){\n        found = true;\n        i = 0;\n      }\n      if(picks[i].playerId == 0 || picks[i].playerId == undefined){\n        found = true;\n      }\n      else{\n        i = i+1;\n      }\n      // found = true;\n    }\n    // return  _.filter(picks,(p:DraftPick)=>{return p.playerId == 0})[0].draftPos;\n    return i+1;\n\n}\n  componentDidMount(): void {\n    this.loadTeams();\n  }\n\n\n\n  handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    fetch(window.name +'/draft/pick/'+ this.state.picks[this.state.pickNumber-1].id\n      +\"?playerId=\"+this.state.player.id, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    }).then(res => {\n\n      if(res.status == 200){\n        this.state.picks[this.state.pickNumber-1].playerName =this.state.player.name;\n        this.state.picks[this.state.pickNumber-1].playerId =this.state.player.id;\n        this.setState({...this.state,pickNumber: this.getPickNumber(this.state.picks) });\n        this.setState({...this.state, player:undefined});\n      }\n      else{\n        alert(\"something\")\n      }\n      console.log(res);\n      // this.setState({...this.state,teams: this.state.teams.push(res)})\n    }).catch(err => {console.log(err)});\n\n\n    e.preventDefault();\n  }\n\n  handleChange(selected:Player[]){\n    this.setState({...this.state, player:selected[0]})\n  }\n  editTeam(draftPos:number){\n    this.setState({...this.state, pickNumber:draftPos});\n  }\n\n  getNeeds(teamId: string){\n\n    this.state.teams.map((team:Team) =>{\n      if(team.id.toString() == teamId){\n        var players:Array<string>;\n        players = [\"QB\",\"RB\",\"RB\",\"WR/TE\",\"WR/TE\",\"WR/TE\",\"K\",\"DST\"];\n        console.log(team.players)\n        if(team.players){\n\n          for(var p of team.players) {\n            var jawn:string = p.position;\n            if(jawn === \"TE\" || jawn ==\"WR\"){\n              jawn=\"WR/TE\";\n            }\n            if (players.indexOf(jawn) > -1) {\n              players.splice(players.indexOf(jawn), 1);\n            }\n          }\n        }\n        alert(players);\n      }\n    })\n\n  }\n\n  render() {\n    return (\n      <div>\n      <div className={\"row tableFixHead\"}>\n        <Form onSubmit={this.handleSubmit}>\n          <Form.Row>\n            {/*<Col>Pick {this.state.pickNumber} for team {this.state.picks[this.state.pickNumber-1]} </Col>*/}\n            <Col>\n              <Typeahead\n                id={\"playersTypeAhead\"}\n                labelKey={(option: Player) => option.name + '-'+option.position }\n                // labelKey={'name'}\n                filterBy={['name']}\n                // multiple={multiple}\n                options={_.filter(this.state.players , (data) => data.team2 == undefined ) }\n                // labelKey={o => {o.name} }\n                placeholder=\"Player\"\n                // selected={this.state.selected}\n                onChange={this.handleChange}\n              />\n            </Col>\n            {/*<Col>*/}\n            {/*    <Form.Control id=\"email\" type=\"text\" value={this.state.newTeam.email} onChange={this.handleChange}/>*/}\n\n            {/*</Col>*/}\n            <Col>\n              <Button variant=\"primary\" type=\"submit\">\n                Draft Player\n              </Button>\n            </Col>\n          </Form.Row>\n\n        </Form>\n      </div>\n        <div className={\"row\"}>\n          <div className={\"col-1\"}>pick#</div>\n          <div className={\"col-1\"}>round.Pick</div>\n          <div className={\"col-4\"}>Team</div>\n          <div className={\"col-4\"}>Player</div>\n          <div className={\"col-2\"}>Utils</div>\n        </div>\n        {this.state.picks.map((pickParam:DraftPick, indx:number) => {\n          return (\n            <div className={this.state.pickNumber === pickParam.draftPos ? \"pick\" : \"\"}>\n              <DraftLine pick={pickParam}\n                         players={this.state.players}\n                         pickNumber={this.state.pickNumber}\n                          editPick={this.editTeam}\n                          getNeeds={this.getNeeds}/>\n            </div>)\n        })}\n\n      </div>\n    );\n  }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {PlayerPage} from \"./admin/PlayersPage\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  RouteComponentProps, Switch\n} from \"react-router-dom\";\nimport {Players} from \"./public/Players\";\nimport {TeamPage} from \"./admin/TeamPage\";\nimport {DraftPage} from \"./admin/DraftPage\";\nconst App: React.FC = () => {\n  window.name = process.env.REACT_APP_HOST==undefined?'not':process.env.REACT_APP_HOST;\n  return (\n      // <div className=\"App\">\n      //      <header className=\"App-header\">\n      //        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      //      </header>\n      //    </div>\n\n    <Router>\n      <div className=\"App\">\n        <ul className=\"nav nav-tabs\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link active\" href=\"#\">Draft Board</a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/playerPage\">Player Page</a>\n          </li>\n\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/teamPage\">Team Page</a>\n          </li>\n\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/draftPage\">Draft</a>\n          </li>\n        </ul>\n        {/*<nav>*/}\n        {/*  /!*<Link to=\"/\">Home</Link>*!/*/}\n        {/*  <Link to=\"/foo\">Players</Link>*/}\n        {/*</nav>*/}\n        <Switch>\n          <Route exact path=\"/\" component={Players} />\n          <Route exact path=\"/playerPage\" component={PlayerPage} />\n          <Route exact path=\"/teamPage\" component={TeamPage} />\n          <Route exact path=\"/draftPage\" component={DraftPage} />\n        </Switch>\n      </div>\n    </Router>\n\n  );\n\n  // return (\n  //   <Router>\n  //   <!--Each route is defined with Route-->\n  //   <Route path=\"/\" component={Home}/>\n  // </Router>)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render\n(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}